{"version":3,"sources":["components/LocationList.js","services/location.js","components/Navbar.js","services/provider.js","utils.js","components/CurrentWeather.js","uv_icon.png","components/HourlyForecast.js","components/DailyForecast.js","services/air_quality.js","components/AirQuality.js","components/Pollutant.js","App.js","reportWebVitals.js","index.js"],"names":["Area","props","className","area","name","sub_area","map","subArea","SubArea","handleLocationSelect","location","value","title","onClick","LocationList","event","onLocationChange","target","areas","AREAS","TRAVEL_AREAS","inside","LOCATION","coord","lon","lat","Navbar","href","onOptionChange","API_KEY","FORECAST_WEATHER","URL","CURRENT_WEATHER","AIR_QUALITY","WEATHER_ICON","WEATHER_ICON_FORMAT","getCurrentWeather","a","params","appid","exclude","units","currentWeather","toString","search","URLSearchParams","fetch","response","json","getHourlyWeather","hourlyWeather","getDailyWeather","dailyWeather","getCurrentAirQuality","airQuality","timestampToTime","timestamp","defaultDate","Date","getHours","getMinutes","substr","timestampToDate","getDate","getMonth","CurrentWeather","state","isLoading","weatherData","this","then","data","setState","current","prevProps","description","Math","round","temp","src","weather","icon","alt","feels_like","humidity","visibility","sunrise","clouds","uvi","wind_speed","sunset","React","Component","HourlyForecast","val","hourly","slice","element","dt","uv_icon","DailyForecast","daily","shift","max","min","AIR_QUALITY_LEVEL","1","score","vietnameseDescription","2","3","4","5","UNNECESSARY_POLLUTANT","POLLUTANT","unit","pm10","limit","level","Infinity","pm2_5","so2","o3","no2","AirQuality","airQualityData","list","main","aqi","Object","values","Pollutant","pollutantData","removeUnnecessaryPollutant","bind","classifyPollutionLevel","components","pollutantJson","forEach","pollutant","entries","reverse","App","handleLocationChange","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8aec8bc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction LocationList(props) {\r\n   const handleLocationSelect = (event) => {\r\n      props.onLocationChange(event.target.value);\r\n   };\r\n\r\n   return (\r\n      <div className=\"dropdown-content\">\r\n         {\r\n            props.areas.map((area) => {\r\n               return (\r\n                  <Area \r\n                     area={area} \r\n                     handleLocationSelect={handleLocationSelect}\r\n                     key={area.name}   \r\n                  />\r\n               );\r\n            })\r\n         }\r\n      </div>\r\n   );\r\n}\r\n\r\nfunction Area(props) {\r\n   return (\r\n      <div className=\"dropdown-area-container\">\r\n         <h2 className=\"area-name\">{props.area.name}</h2>\r\n         {\r\n            props.area.sub_area.map((subArea) => {\r\n               return (\r\n                  <SubArea \r\n                     subArea={subArea} \r\n                     handleLocationSelect={props.handleLocationSelect} \r\n                     key={subArea.name}\r\n                  />\r\n               );\r\n            })\r\n         }\r\n      </div>\r\n   );\r\n}\r\n\r\nfunction SubArea(props) {\r\n   return (\r\n      <div className=\"dropdown-subarea-container\">\r\n         <h3 className=\"subarea-name\">{props.subArea.name}</h3>\r\n         {\r\n            props.subArea.location.map((location) => {\r\n               return (\r\n                  <button\r\n                     className=\"dropdown-option\"\r\n                     value={location.title}\r\n                     onClick={props.handleLocationSelect}\r\n                     key={location.title}\r\n                  >\r\n                     {location.title}\r\n                  </button>\r\n               );\r\n            })\r\n         }\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default LocationList;\r\n","export const AREAS = [\r\n   {\r\n      name: 'Bắc Bộ',\r\n      sub_area: [\r\n         {\r\n            name: 'Đồng bằng sông Hồng',\r\n            location: [\r\n               { value: 'Hà Nội', title: 'Hà Nội' },\r\n               { value: 'Bắc Ninh', title: 'Bắc Ninh' },\r\n               { value: 'Hà Nam', title: 'Hà Nam' },\r\n               { value: 'Hải Dương', title: 'Hải Dương' },\r\n               { value: 'Hải Phòng', title: 'Hải Phòng' },\r\n               { value: 'Thái Bình', title: 'Thái Bình' },\r\n               { value: 'Nam Định', title: 'Nam Định' },\r\n            ],\r\n         },\r\n         {\r\n            name: 'Tây Bắc Bộ',\r\n            location: [\r\n               { value: 'Lai Châu', title: 'Lai Châu' },\r\n               { value: 'Lào Cai', title: 'Lào Cai' },\r\n               { value: 'Điện Biên', title: 'Điện Biên' },\r\n               { value: 'Yên Bái', title: 'Yên Bái' },\r\n               { value: 'Sơn La', title: 'Sơn La' },\r\n               { value: 'Hòa Bình', title: 'Hòa Bình' },\r\n            ],\r\n         },\r\n         {\r\n            name: 'Đông Bắc Bộ',\r\n            location: [\r\n               { value: 'Hà Giang', title: 'Hà Giang' },\r\n               { value: 'Cao Bằng', title: 'Cao Bằng' },\r\n               { value: 'Lạng Sơn', title: 'Lạng Sơn' },\r\n               { value: 'Thái Nguyên', title: 'Thái Nguyên' },\r\n               { value: 'Bắc Giang', title: 'Bắc Giang' },\r\n               { value: 'Quảng Ninh', title: 'Quảng Ninh' },\r\n            ],\r\n         },\r\n      ],\r\n   },\r\n   {\r\n      name: 'Trung Bộ',\r\n      sub_area: [\r\n         {\r\n            name: 'Bắc Trung Bộ',\r\n            location: [\r\n               { value: 'Thanh Hóa', title: 'Thanh Hóa' },\r\n               { value: 'Nghệ An', title: 'Nghệ An' },\r\n               { value: 'Hà Tĩnh', title: 'Hà Tĩnh' },\r\n               { value: 'Quảng Bình', title: 'Quảng Bình' },\r\n               { value: 'Quảng Trị', title: 'Quảng Trị' },\r\n               { value: 'Thừa Thiên - Huế', title: 'Thừa Thiên - Huế' },\r\n            ],\r\n         },\r\n         {\r\n            name: 'Duyên hải Nam Trung Bộ',\r\n            location: [\r\n               { value: 'Đà Nẵng', title: 'Đà Nẵng' },\r\n               { value: 'Quảng Ngãi', title: 'Quảng Ngãi' },\r\n               { value: 'Bình Định', title: 'Bình Định' },\r\n               { value: 'Phú Yên', title: 'Phú Yên' },\r\n               { value: 'Khánh Hòa', title: 'Khánh Hòa' },\r\n               { value: 'Bình Thuận', title: 'Bình Thuận' },\r\n            ],\r\n         },\r\n         {\r\n            name: 'Tây nguyên',\r\n            location: [\r\n               { value: 'Gia Lai', title: 'Gia Lai' },\r\n               { value: 'Kon Tum', title: 'Kon Tum' },\r\n               { value: 'Đắk Lắk', title: 'Đắk Lắk' },\r\n               { value: 'Lâm Đồng', title: 'Lâm Đồng' },\r\n               { value: 'Đắk Nông', title: 'Đắk Nông' },\r\n            ],\r\n         },\r\n      ],\r\n   },\r\n   {\r\n      name: 'Nam Bộ',\r\n      sub_area: [\r\n         {\r\n            name: 'Đông Nam Bộ',\r\n            location: [\r\n               { value: 'TP Hồ Chí Minh', title: 'TP Hồ Chí Minh' },\r\n               { value: 'Bình Dương', title: 'Bình Dương' },\r\n               { value: 'Tây Ninh', title: 'Tây Ninh' },\r\n               { value: 'Đồng Nai', title: 'Đồng Nai' },\r\n               { value: 'Bà Rịa - Vũng Tàu', title: 'Bà Rịa - Vũng Tàu' },\r\n            ],\r\n         },\r\n         {\r\n            name: 'Đồng bằng sông Cửu Long',\r\n            location: [\r\n               { value: 'Đồng Tháp', title: 'Đồng Tháp' },\r\n               { value: 'Bến Tre', title: 'Bến Tre' },\r\n               { value: 'An Giang', title: 'An Giang' },\r\n               { value: 'Cần Thơ', title: 'Cần Thơ' },\r\n               { value: 'Trà Vinh', title: 'Trà Vinh' },\r\n               { value: 'Bạc Liêu', title: 'Bạc Liêu' },\r\n               { value: 'Cà Mau', title: 'Cà Mau' },\r\n            ],\r\n         },\r\n      ],\r\n   },\r\n];\r\n\r\nexport const TRAVEL_AREAS = [\r\n   {\r\n      name: 'Bắc Bộ',\r\n      sub_area: [\r\n         {\r\n            name: 'Đồng bằng sông Hồng',\r\n            location: [\r\n               { value: 'Đại Lải', title: 'Đại Lải', inside: 'Vĩnh Phúc' },\r\n               { value: 'Tam Đảo', title: 'Tam Đảo', inside: 'Vĩnh Phúc' },\r\n               { value: 'Cát Bà', title: 'Cát Bà', inside: 'Hải Phòng' },\r\n               { value: 'Đồ Sơn', title: 'Đồ Sơn', inside: 'Hải Phòng' },\r\n               { value: 'Tràng An', title: 'Tràng An', inside: 'Ninh Bình' },\r\n               { value: 'Hoa Lư', title: 'Hoa Lư', inside: 'Ninh Bình' },\r\n            ],\r\n         },\r\n         {\r\n            name: 'Tây Bắc Bộ',\r\n            location: [\r\n               { value: 'Sa Pa', title: 'Sa Pa', inside: 'Lào Cai' },\r\n               { value: 'Ô Quy Hồ', title: 'Ô Quy Hồ', inside: 'Lai Châu' },\r\n               { value: 'Fanxipan', title: 'Fanxipan', inside: 'Lào Cai' },\r\n               { value: 'Mù Cang Chải', title: 'Mù Cang Chải', inside: 'Yên Bái' },\r\n               { value: 'Tà Xùa', title: 'Tà Xùa', inside: 'Sơn La' },\r\n               { value: 'Mai Châu', title: 'Mai Châu', inside: 'Hòa Bình' },\r\n            ],\r\n         },\r\n         {\r\n            name: 'Đông Bắc Bộ',\r\n            location: [\r\n               { value: 'Mã Pí Lèng', title: 'Mã Pí Lèng', inside: 'Hà Giang' },\r\n               { value: 'Bản Giốc', title: 'Bản Giốc', inside: 'Cao Bằng' },\r\n               { value: 'Hồ Ba Bể', title: 'Hồ Ba Bể', inside: 'Bắc Kạn' },\r\n               { value: 'Yên Tử', title: 'Yên Tử', inside: 'Quảng Ninh' },\r\n               { value: 'Hạ Long', title: 'Hạ Long', inside: 'Quảng Ninh' },\r\n               { value: 'Cô Tô', title: 'Cô Tô', inside: 'Quảng Ninh' },\r\n            ],\r\n         },\r\n      ],\r\n   },\r\n   {\r\n      name: 'Trung Bộ',\r\n      sub_area: [\r\n         {\r\n            name: 'Bắc Trung Bộ',\r\n            location: [\r\n               { value: 'Sầm Sơn', title: 'Sầm Sơn', inside: 'Thanh Hóa' },\r\n               { value: 'Cửa Lò', title: 'Cửa Lò', inside: 'Nghệ An' },\r\n               { value: 'Bãi Lữ', title: 'Bãi Lữ', inside: 'Nghệ An' },\r\n               { value: 'Phong Nha - Kẻ Bàng', title: 'Phong Nha - Kẻ Bàng', inside: 'Quảng Bình' },\r\n               { value: 'Sơn Đoòng', title: 'Sơn Đoòng', inside: 'Quảng Bình' },\r\n               { value: 'Lăng Cô', title: 'Lăng Cô', inside: 'Thừa Thiên - Huế' },\r\n            ],\r\n         },\r\n         {\r\n            name: 'Duyên hải Nam Trung Bộ',\r\n            location: [\r\n               { value: 'Bà Nà', title: 'Bà Nà', inside: 'Đà Nẵng' },\r\n               { value: 'Mỹ Sơn', title: 'Mỹ Sơn', inside: 'Quảng Nam' },\r\n               { value: 'Hội An', title: 'Hội An', inside: 'Quảng Nam' },\r\n               { value: 'Nha Trang', title: 'Nha Trang', inside: 'Khánh Hòa' },\r\n               { value: 'Lý Sơn', title: 'Lý Sơn', inside: 'Quảng Ngãi' },\r\n               { value: 'Bãi Xép', title: 'Bãi Xép', inside: 'Phú Yên' },\r\n               { value: 'Mũi Né', title: 'Mũi Né', inside: 'Bình Thuận' },\r\n            ],\r\n         },\r\n         {\r\n            name: 'Tây nguyên',\r\n            location: [\r\n               { value: 'Biển Hồ', title: 'Biển Hồ', inside: 'Gia Lai' },\r\n               { value: 'Đà Lạt', title: 'Đà Lạt', inside: 'Lâm Đồng' },\r\n               { value: 'Tà Năng', title: 'Tà Năng', inside: 'Lâm Đồng' },\r\n            ],\r\n         },\r\n      ],\r\n   },\r\n   {\r\n      name: 'Nam Bộ',\r\n      sub_area: [\r\n         {\r\n            name: 'Đông Nam Bộ',\r\n            location: [\r\n               { value: 'Núi Bà Đen', title: 'Núi Bà Đen', inside: 'Tây Ninh' },\r\n               { value: 'Giang Điền', title: 'Giang Điền', inside: 'Đồng Nai' },\r\n               { value: 'Vũng Tàu', title: 'Vũng Tàu', inside: 'Bà Rịa - Vũng Tàu' },\r\n            ],\r\n         },\r\n         {\r\n            name: 'Đồng bằng sông Cửu Long',\r\n            location: [\r\n               { value: 'Đồng Sen Tháp Mười', title: 'Đồng Sen Tháp Mười', inside: 'Đồng Tháp' },\r\n               { value: 'Cái Bè', title: 'Cái Bè', inside: 'Tiền Giang' },\r\n               { value: 'Thất Sơn', title: 'Thất Sơn', inside: 'An Giang' },\r\n               { value: 'Hòn Đá Bạc', title: 'Hòn Đá Bạc', inside: 'Cà Mau' },\r\n               { value: 'Phú Quốc', title: 'Phú Quốc', inside: 'Kiên Giang' },\r\n            ],\r\n         },\r\n      ],\r\n   },\r\n];\r\n\r\nexport const LOCATION = {\r\n   // TỈNH / THÀNH PHỐ\r\n   // BẮC BỘ\r\n   // Đồng bằng sông Hồng\r\n   'Hà Nội': {\r\n      name: 'Hà Nội', coord: { lon: '105.8412', lat: '21.0245' },\r\n   },\r\n   'Bắc Ninh' : {\r\n      name: 'Bắc Ninh', coord: { lon: '106.050003', lat: '21.183331' },\r\n   },\r\n   'Hà Nam': {\r\n      name: 'Hà Nam', coord: { lon: '105.923996', lat: '20.585867' },\r\n   },\r\n   'Hải Dương' : {\r\n      name: 'Hải Dương', coord: { lon: '106.316673', lat: '20.933331' },\r\n   },\r\n   'Hải Phòng' : {\r\n      name: 'Hải Phòng', coord: { lon: '106.5833', lat: '20.8333' },\r\n   },\r\n   'Thái Bình' : {\r\n      name: 'Thái Bình', coord: { lon: '106.344722', lat: '20.453056' },\r\n   },\r\n   'Nam Định' : {\r\n      name: 'Nam Định', coord: { lon: '106.1667', lat: '20.4167' },\r\n   },\r\n   // Tây Bắc Bộ\r\n   'Lai Châu' : {\r\n      name: 'Lai Châu', coord: { lon: '103.265991', lat: '22.362776' },\r\n   },\r\n   'Lào Cai' : {\r\n      name: 'Lào Cai', coord: { lon: '103.983333', lat: '22.420278' },\r\n   },\r\n   'Điện Biên' : {\r\n      name: 'Điện Biên', coord: { lon: '103.0167', lat: '21.3833' },\r\n   },\r\n   'Yên Bái' : {\r\n      name: 'Yên Bái', coord: { lon: '104.6667', lat: '21.5' },\r\n   },\r\n   'Sơn La' : {\r\n      name: 'Sơn La', coord: { lon: '104', lat: '21.1667' },\r\n   },\r\n   'Hòa Bình' : {\r\n      name: 'Hòa Bình', coord: { lon: '105.338333', lat: '20.81333' },\r\n   },\r\n   // Đông Bắc Bộ\r\n   'Hà Giang' : {\r\n      name: 'Hà Giang', coord: { lon: '105', lat: '22.75' },\r\n   },\r\n   'Cao Bằng' : {\r\n      name: 'Cao Bằng', coord: { lon: '106.25', lat: '22.6667' },\r\n   },\r\n   'Lạng Sơn' : {\r\n      name: 'Lạng Sơn', coord: { lon: '106.5', lat: '21.75' },\r\n   },\r\n   'Thái Nguyên' : {\r\n      name: 'Thái Nguyên', coord: { lon: '105.876944', lat: '21.590833' },\r\n   },\r\n   'Bắc Giang' : {\r\n      name: 'Bắc Giang', coord: { lon: '106.3333', lat: '21.3333' },\r\n   },\r\n   'Quảng Ninh' : {\r\n      name: 'Quảng Ninh', coord: { lon: '107.3333', lat: '21.25' },\r\n   },\r\n\r\n   // TRUNG BỘ\r\n   // Bắc Trung Bộ\r\n   'Thanh Hóa' : {\r\n      name: 'Thanh Hóa', coord: { lon: '105.7667', lat: '19.8' },\r\n   },\r\n   'Nghệ An' : {\r\n      name: 'Nghệ An', coord: { lon: '104.8333', lat: '19.3333' },\r\n   },\r\n   'Hà Tĩnh' : {\r\n      name: 'Hà Tĩnh', coord: { lon: '105.900002', lat: '18.33333' },\r\n   },\r\n   'Quảng Bình' : {\r\n      name: 'Quảng Bình', coord: { lon: '106.3333', lat: '17.5' },\r\n   },\r\n   'Quảng Trị' : {\r\n      name: 'Quảng Trị', coord: { lon: '107.2', lat: '16.75' },\r\n   },\r\n   'Thừa Thiên - Huế' : {\r\n      name: 'Thừa Thiên - Huế', coord: { lon: '107.6', lat: '16.4667' },\r\n   },\r\n   // Duyên hải Nam Trung Bộ\r\n   'Đà Nẵng' : {\r\n      name: 'Đà Nẵng', coord: { lon: '108.0833', lat: '16.0833' },\r\n   },\r\n   'Quảng Ngãi' : {\r\n      name: 'Quảng Ngãi', coord: { lon: '108.8', lat: '15.1167' },\r\n   },\r\n   'Bình Định' : {\r\n      name: 'Bình Định', coord: { lon: '109.0', lat: '14.16667' },\r\n   },\r\n   'Phú Yên' : {\r\n      name: 'Phú Yên', coord: { lon: '109.166672', lat: '13.16667' },\r\n   },\r\n   'Khánh Hòa' : {\r\n      name: 'Khánh Hòa', coord: { lon: '109', lat: '12.3333' },\r\n   },\r\n   'Bình Thuận' : {\r\n      name: 'Bình Thuận', coord: { lon: '108.0', lat: '11.08333' },\r\n   },\r\n   // Tây Nguyên\r\n   'Gia Lai' : {\r\n      name: 'Gia Lai', coord: { lon: '108.25', lat: '13.75' },\r\n   },\r\n   'Kon Tum' : {\r\n      name: 'Kon Tum', coord: { lon: '108.0', lat: '14.35' },\r\n   },\r\n   'Đắk Lắk' : {\r\n      name: 'Đắk Lắk', coord: { lon: '108.166672', lat: '12.83333' },\r\n   },\r\n   'Lâm Đồng' : {\r\n      name: 'Lâm Đồng', coord: { lon: '108.3333', lat: '11.5' },\r\n   },\r\n   'Đắk Nông' : {\r\n      name: 'Đắk Nông', coord: { lon: '107.701721', lat: '12.256812' },\r\n   },\r\n\r\n   // NAM BỘ\r\n   // Đông Nam Bộ\r\n   'TP Hồ Chí Minh' : {\r\n      name: 'TP Hồ Chí Minh', coord: { lon: '106.6667', lat: '10.8333' },\r\n   },\r\n   'Bình Dương' : {\r\n      name: 'Bình Dương', coord: { lon: '106.6667', lat: '11.1667' },\r\n   },\r\n   'Tây Ninh' : {\r\n      name: 'Tây Ninh', coord: { lon: '106.118889', lat: '11.367778' },\r\n   },\r\n   'Đồng Nai' : {\r\n      name: 'Đồng Nai', coord: { lon: '107.146912', lat: '11.05443' },\r\n   },\r\n   'Bà Rịa - Vũng Tàu' : {\r\n      name: 'Bà Rịa - Vũng Tàu', coord: { lon: '107.0843', lat: '10.346' },\r\n   },\r\n   // Đồng bằng sông Cửu Long\r\n   'Đồng Tháp' : {\r\n      name: 'Đồng Tháp', coord: { lon: '105.682983', lat: '10.575572' },\r\n   },\r\n   'Bến Tre' : {\r\n      name: 'Bến Tre', coord: { lon: '106.5', lat: '10.16667' },\r\n   },\r\n   'An Giang' : {\r\n      name: 'An Giang', coord: { lon: '105.166672', lat: '10.5' },\r\n   },\r\n   'Cần Thơ' : {\r\n      name: 'Cần Thơ', coord: { lon: '105.6667', lat: '9.8333' },\r\n   },\r\n   'Trà Vinh' : {\r\n      name: 'Trà Vinh', coord: { lon: '106.344167', lat: '9.9525' },\r\n   },\r\n   'Bạc Liêu' : {\r\n      name: 'Bạc Liêu', coord: { lon: '105.493469', lat: '9.312214' },\r\n   },\r\n   'Cà Mau' : {\r\n      name: 'Cà Mau', coord: { lon: '105.15', lat: '9.1769' },\r\n   },\r\n\r\n   // ĐỊA ĐIỂM DU LỊCH\r\n   // BẮC BỘ\r\n   // Đồng bằng sông Hồng\r\n   'Đại Lải': {\r\n      name: 'Đại Lải', coord: { lon: '105.714722', lat: '21.325' },\r\n   },\r\n   'Tam Đảo': {\r\n      name: 'Tam Đảo', coord: { lon: '105.616667', lat: '21.393611' },\r\n   },\r\n   'Cát Bà': {\r\n      name: 'Cát Bà', coord: { lon: '107.057778', lat: '20.723889' },\r\n   },\r\n   'Đồ Sơn': {\r\n      name: 'Đồ Sơn', coord: { lon: '106.789444', lat: '20.713611' },\r\n   },\r\n   'Tràng An': {\r\n      name: 'Tràng An', coord: { lon: '105.896389', lat: '20.256667' },\r\n   },\r\n   'Hoa Lư': {\r\n      name: 'Hoa Lư', coord: { lon: '105.916944', lat: '20.25' },\r\n   },\r\n   // Tây Bắc Bộ\r\n   'Sa Pa': {\r\n      name: 'Sa Pa', coord: { lon: '103.841944', lat: '22.335556' },\r\n   },\r\n   'Ô Quy Hồ': {\r\n      name: 'Ô Quy Hồ', coord: { lon: '103.763333', lat: '22.353889' },\r\n   },\r\n   'Fanxipan': {\r\n      name: 'Fanxipan', coord: { lon: '103.775', lat: '22.303333' },\r\n   },\r\n   'Mù Cang Chải': {\r\n      name: 'Mù Cang Chải', coord: { lon: '104.089222', lat: '21.850915' },\r\n   },\r\n   'Tà Xùa': {\r\n      name: 'Tà Xùa', coord: { lon: '104.490278', lat: '21.326944' },\r\n   },\r\n   'Mai Châu': {\r\n      name: 'Mai Châu', coord: { lon: '105.005278', lat: '20.671667' },\r\n   },\r\n   // Đông Bắc Bộ\r\n   'Mã Pí Lèng': {\r\n      name: 'Mã Pí Lèng', coord: { lon: '105.410942', lat: '23.240808' },\r\n   },\r\n   'Bản Giốc': {\r\n      name: 'Bản Giốc', coord: { lon: '106.722501', lat: '22.855897' },\r\n   },\r\n   'Hồ Ba Bể': {\r\n      name: 'Hồ Ba Bể', coord: { lon: '105.616667', lat: '22.416667' },\r\n   },\r\n   'Yên Tử': {\r\n      name: 'Yên Tử', coord: { lon: '106.716667', lat: '21.083333' },\r\n   },\r\n   'Hạ Long': {\r\n      name: 'Hạ Long', coord: { lon: '107.089722', lat: '20.873333' },\r\n   },\r\n   'Cô Tô': {\r\n      name: 'Cô Tô', coord: { lon: '107.698056', lat: '20.947222' },\r\n   },\r\n\r\n   // TRUNG BỘ\r\n   // Bắc Trung Bộ\r\n   'Sầm Sơn': {\r\n      name: 'Sầm Sơn', coord: { lon: '105.887778', lat: '19.707778' },\r\n   },\r\n   'Cửa Lò': {\r\n      name: 'Cửa Lò', coord: { lon: '105.73', lat: '18.72' },\r\n   },\r\n   'Bãi Lữ': {\r\n      name: 'Bãi Lữ', coord: { lon: '105.6', lat: '18.8' },\r\n   },\r\n   'Phong Nha - Kẻ Bàng': {\r\n      name: 'Phong Nha - Kẻ Bàng', coord: { lon: '106.15125', lat: '17.537222' },\r\n   },\r\n   'Sơn Đoòng': {\r\n      name: 'Sơn Đoòng', coord: { lon: '106.2875', lat: '17.456944' },\r\n   },\r\n   'Lăng Cô': {\r\n      name: 'Lăng Cô', coord: { lon: '108.0836', lat: '16.23' },\r\n   },\r\n   // Duyên hải Nam Trung Bộ\r\n   'Bà Nà': {\r\n      name: 'Bà Nà', coord: { lon: '107.9942', lat: '15.9957' },\r\n   },\r\n   'Mỹ Sơn': {\r\n      name: 'Mỹ Sơn', coord: { lon: '108.116667', lat: '15.766667' },\r\n   },\r\n   'Hội An': {\r\n      name: 'Hội An', coord: { lon: '108.320556', lat: '15.880833' },\r\n   },\r\n   'Nha Trang': {\r\n      name: 'Nha Trang', coord: { lon: '109.196389', lat: '12.256111' },\r\n   },\r\n   'Lý Sơn': {\r\n      name: 'Lý Sơn', coord: { lon: '109.1175', lat: '15.380833' },\r\n   },\r\n   'Bãi Xép': {\r\n      name: 'Bãi Xép', coord: { lon: '109.255278', lat: '13.291111' },\r\n   },\r\n   'Mũi Né': {\r\n      name: 'Mũi Né', coord: { lon: '108.283333', lat: '10.933333' },\r\n   },\r\n   // Tây Nguyên\r\n   'Biển Hồ': {\r\n      name: 'Biển Hồ', coord: { lon: '108.014444', lat: '14.059444' },\r\n   },\r\n   'Đà Lạt': {\r\n      name: 'Đà Lạt', coord: { lon: '108.436866', lat: '11.940381' },\r\n   },\r\n   'Tà Năng': {\r\n      name: 'Tà Năng', coord: { lon: '108.444018', lat: '11.567233' },\r\n   },\r\n\r\n   // NAM BỘ\r\n   // Đông Nam Bộ\r\n   'Núi Bà Đen': {\r\n      name: 'Núi Bà Đen', coord: { lon: '106.166667', lat: '11.366667' },\r\n   },\r\n   'Giang Điền': {\r\n      name: 'Giang Điền', coord: { lon: '106.983357', lat: '10.921673' },\r\n   },\r\n   'Vũng Tàu': {\r\n      name: 'Vũng Tàu', coord: { lon: '107.095251', lat: '10.343569' },\r\n   },\r\n   // Đồng bằng sông Cửu Long\r\n   'Đồng Sen Tháp Mười': {\r\n      name: 'Đồng Sen Tháp Mười', coord: { lon: '105.848651', lat: '10.520498' },\r\n   },\r\n   'Cái Bè': {\r\n      name: 'Cái Bè', coord: { lon: '105.933611', lat: '10.405833' },\r\n   },\r\n   'Thất Sơn': {\r\n      name: 'Thất Sơn', coord: { lon: '104.973056', lat: '10.540833' },\r\n   },\r\n   'Hòn Đá Bạc': {\r\n      name: 'Hòn Đá Bạc', coord: { lon: '104.800278', lat: '9.179166' },\r\n   },\r\n   'Phú Quốc': {\r\n      name: 'Phú Quốc', coord: { lon: '104.010467', lat: '10.287154' },\r\n   },\r\n};\r\n","import React from 'react';\r\n\r\nimport LocationList from './LocationList';\r\nimport { AREAS, TRAVEL_AREAS } from '../services/location';\r\n\r\nfunction Navbar(props) {\r\n   return (\r\n      <div className=\"navbar\">\r\n            <div className=\"option-container\">\r\n               <a className=\"dropdown\" href=\"#!\">\r\n                  Tỉnh / Thành phố\r\n                  <LocationList \r\n                     areas={AREAS}\r\n                     onLocationChange={props.onOptionChange}\r\n                  />\r\n               </a>\r\n               <a className=\"dropdown\" href=\"#!\">\r\n                  Địa điểm du lịch\r\n                  <LocationList \r\n                     areas={TRAVEL_AREAS}\r\n                     onLocationChange={props.onOptionChange}\r\n                  />\r\n               </a>\r\n            </div>\r\n            <div className=\"appname\">\r\n               <p className=\"letter letter-c\">C</p>\r\n               <p className=\"letter letter-l\">l</p>\r\n               <p className=\"letter letter-o\">o</p>\r\n               <p className=\"letter letter-u\">u</p>\r\n               <p className=\"letter letter-d\">d</p>\r\n               <p className=\"letter letter-y\">y</p>\r\n            </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Navbar;\r\n","const API_KEY = [\r\n   '373a59a53a6e12d6492b8823e6963f5f',\r\n   'dcc848b9f88fd641462e8170356f3877',\r\n];\r\n\r\nconst FORECAST_WEATHER =  new URL(\"https://api.openweathermap.org/data/2.5/onecall?\");\r\nconst CURRENT_WEATHER = new URL(\"https://api.openweathermap.org/data/2.5/onecall?\");\r\n\r\nconst AIR_QUALITY = new URL(\"https://api.openweathermap.org/data/2.5/air_pollution?\");\r\n\r\nexport const WEATHER_ICON = new URL(\"https://openweathermap.org/img/wn/\");\r\nexport const WEATHER_ICON_FORMAT = \"@2x.png\";\r\n\r\n// Fetch functions\r\nexport async function getCurrentWeather(lat, lon) {\r\n   const params = {\r\n      appid: API_KEY[1],\r\n      lat: lat,\r\n      lon: lon,\r\n      exclude: 'minutely,hourly,daily',\r\n      units: 'metric',\r\n   };\r\n   let currentWeather = new URL(CURRENT_WEATHER.toString());\r\n   currentWeather.search = new URLSearchParams(params).toString();\r\n\r\n   const response = await fetch(currentWeather);\r\n   const json = await response.json();\r\n\r\n   return json;\r\n}\r\n\r\nexport async function getHourlyWeather(lat,lon) {\r\n   const params = {\r\n      appid: API_KEY[1],\r\n      lat: lat,\r\n      lon: lon,\r\n      exclude: 'current,minutely,daily',\r\n      units: 'metric',\r\n   }\r\n   let hourlyWeather = new URL(FORECAST_WEATHER.toString());\r\n   hourlyWeather.search = new URLSearchParams(params).toString();\r\n\r\n   const response = await fetch(hourlyWeather);\r\n   const json = await response.json();\r\n\r\n   return json;\r\n}\r\n\r\nexport async function getDailyWeather(lat, lon) {\r\n   const params = {\r\n      appid: API_KEY[1],\r\n      lat: lat,\r\n      lon: lon,\r\n      exclude: 'current,minutely,hourly',\r\n      units: 'metric',\r\n   };\r\n   let dailyWeather = new URL(FORECAST_WEATHER.toString());\r\n   dailyWeather.search = new URLSearchParams(params).toString();\r\n\r\n   const response = await fetch(dailyWeather);\r\n   const json = await response.json();\r\n\r\n   return json;\r\n}\r\n\r\nexport async function getCurrentAirQuality(lat, lon) {\r\n   const params = {\r\n      appid: API_KEY[1],\r\n      lat: lat,\r\n      lon: lon,\r\n   };\r\n   let airQuality = new URL(AIR_QUALITY.toString());\r\n   airQuality.search = new URLSearchParams(params).toString();\r\n\r\n   const response = await fetch(airQuality);\r\n   const json = await response.json();\r\n\r\n   return json;\r\n}\r\n","export function timestampToTime(timestamp) {\r\n    let defaultDate = new Date(timestamp * 1000);\r\n\r\n    let hours = defaultDate.getHours();\r\n    let minutes = '0' + defaultDate.getMinutes();\r\n\r\n    let time = hours + ':' + minutes.substr(-2);\r\n\r\n    return time;\r\n}\r\n\r\nexport function timestampToDate(timestamp) {\r\n    let defaultDate = new Date(timestamp * 1000);\r\n\r\n    let day = defaultDate.getDate();\r\n    let month = defaultDate.getMonth() + 1;\r\n\r\n    let date = day + '-' + month;\r\n    \r\n    return date;\r\n}\r\n\r\nexport function toVietnamese(description) {\r\n   const translation = {\r\n      // Clear weather\r\n      'clear sky': 'Quang mây',\r\n      \r\n      // Clouds weather\r\n      'few clouds': 'Ít mây',\r\n      'scatterd clouds': 'Mây rải rác',\r\n      'broken clouds': 'Nhiều mây',\r\n      'overcast clouds': 'Nhiều mây',\r\n      \r\n      // Rain weather\r\n      'light rain': 'Mưa nhẹ',\r\n      'moderate rain': 'Mưa vừa',\r\n      'heavy intensity rain': 'Mưa to',\r\n      'very heavy rain': 'Mưa rất to',\r\n      'extreme rain': 'Mưa rất to',\r\n      'freezing rain': 'Mưa lạnh',\r\n      'light intensity shower rain': 'Mưa rào nhẹ',\r\n      'shower rain': 'Mưa rào',\r\n      'heavy intensity shower rain': 'Mưa to',\r\n      'ragged shower rain': 'Mưa rất to',      \r\n   };\r\n   \r\n   return translation[description];\r\n}","import React from 'react';\r\n\r\nimport { getCurrentWeather } from '../services/provider';\r\nimport { WEATHER_ICON, WEATHER_ICON_FORMAT } from '../services/provider';\r\nimport { LOCATION } from '../services/location';\r\nimport { timestampToTime, toVietnamese } from '../utils';\r\n\r\nclass CurrentWeather extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         location: this.props.location,\r\n         isLoading: true,\r\n         weatherData: {},\r\n      };\r\n   }\r\n\r\n   componentDidMount() {\r\n      const location = LOCATION[this.state.location];\r\n\r\n      getCurrentWeather(location.coord.lat, location.coord.lon).then((data) => {\r\n         this.setState({\r\n            isLoading: false,\r\n            weatherData: data.current,\r\n         });\r\n      });\r\n   }\r\n\r\n   componentDidUpdate(prevProps) {\r\n      if (this.props.location !== prevProps.location) {\r\n         const location = LOCATION[this.props.location];\r\n\r\n         getCurrentWeather(location.coord.lat, location.coord.lon).then((data) => {\r\n            this.setState({\r\n               location: this.props.location,\r\n               isLoading: false,\r\n               weatherData: data.current,\r\n            });\r\n         });\r\n      }\r\n   }\r\n\r\n   render() {\r\n      const { isLoading, location, weatherData } = this.state;\r\n\r\n      return (\r\n         !isLoading \r\n         &&\r\n         <div className=\"current-container\">\r\n            <div className=\"current-main\">\r\n               <p className=\"current-location\">{location}</p>\r\n               <p className=\"current-temp\">{Math.round(weatherData.temp)} °C</p>\r\n               <img \r\n                  className=\"current-weather-icon\"\r\n                  src={WEATHER_ICON + weatherData.weather[0].icon + WEATHER_ICON_FORMAT} \r\n                  alt=\"weather icon\"\r\n               />\r\n               <p className=\"current-weather\">{toVietnamese(weatherData.weather[0].description)}</p>\r\n            </div>\r\n            <div className=\"current-details\">\r\n               <table className=\"table-details\">\r\n                  <tbody>\r\n                     <tr>\r\n                        <td>Nhiệt độ cảm nhận</td>\r\n                        <td className=\"detail-val\">{Math.round(weatherData.feels_like)} °C</td>\r\n                     </tr>\r\n                     <tr>\r\n                        <td>Độ ẩm</td>\r\n                        <td className=\"detail-val\">{weatherData.humidity} %</td>\r\n                     </tr>\r\n                     <tr>\r\n                        <td>Tầm nhìn xa</td>\r\n                        <td className=\"detail-val\">{weatherData.visibility / 1000} km</td>\r\n                     </tr>\r\n                     <tr>\r\n                        <td>Mặt trời mọc</td>\r\n                        <td className=\"detail-val\">{timestampToTime(weatherData.sunrise)}</td>\r\n                     </tr>\r\n                  </tbody>\r\n               </table>\r\n               <table className=\"table-details\">\r\n                  <tbody>\r\n                        <tr>\r\n                           <td>Tỉ lệ mây</td>\r\n                           <td className=\"detail-val\">{weatherData.clouds} %</td>\r\n                        </tr>\r\n                        <tr>\r\n                           <td>Chỉ số UV</td>\r\n                           <td className=\"detail-val\">{weatherData.uvi}</td>\r\n                        </tr>\r\n                        <tr>\r\n                           <td>Gió</td>\r\n                           <td className=\"detail-val\">{Math.round(weatherData.wind_speed * 3.6)} km/h</td>\r\n                        </tr>\r\n                        <tr>\r\n                           <td>Mặt trời lặn</td>\r\n                           <td className=\"detail-val\">{timestampToTime(weatherData.sunset)}</td>\r\n                        </tr>\r\n                  </tbody>\r\n               </table>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default CurrentWeather;\r\n","export default __webpack_public_path__ + \"static/media/uv_icon.65f61773.png\";","import React from 'react';\r\n\r\nimport { getHourlyWeather } from '../services/provider';\r\nimport { WEATHER_ICON, WEATHER_ICON_FORMAT } from '../services/provider';\r\nimport { LOCATION } from '../services/location';\r\nimport { timestampToTime } from '../utils';\r\n\r\nimport uv_icon from '../uv_icon.png';\r\n\r\nclass HourlyForecast extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         location: this.props.location,\r\n         isLoading: true,\r\n         weatherData: [],\r\n      };\r\n   }\r\n\r\n   componentDidMount() {\r\n      const location = LOCATION[this.state.location];\r\n\r\n      getHourlyWeather(location.coord.lat, location.coord.lon).then((val) => {\r\n         this.setState({\r\n               location: this.props.location,\r\n               isLoading: false,\r\n               weatherData: val.hourly,\r\n         });\r\n      });\r\n   }\r\n\r\n   componentDidUpdate(prevProps) {\r\n      if (this.props.location !== prevProps.location) {\r\n         const location = LOCATION[this.props.location];\r\n\r\n         getHourlyWeather(location.coord.lat, location.coord.lon).then((val) => {\r\n            this.setState({\r\n               location: this.props.location,\r\n               isLoading: false,\r\n               weatherData: val.hourly,\r\n            });\r\n         });\r\n      }\r\n   }\r\n\r\n   render() {\r\n      const { isLoading, weatherData } = this.state;\r\n\r\n      return (\r\n         !isLoading\r\n         &&\r\n         <div className=\"forecast-container\">\r\n               <h2 className=\"section-title\">Dự báo thời tiết hôm nay</h2>\r\n               <div className=\"forecast-card-container\">\r\n                  {\r\n                     weatherData.slice(0, 5).map(element => {\r\n                        return (\r\n                           <div key={element.dt} className=\"forecast-card\">\r\n                              <p className=\"time\">{timestampToTime(element.dt)}</p>\r\n                              <p className=\"max-temp\">{Math.round(element.temp)} <span>°</span></p>\r\n                              <img \r\n                                 className=\"forecast-weather-icon\"\r\n                                 src={WEATHER_ICON + element.weather[0].icon + WEATHER_ICON_FORMAT}\r\n                                 alt=\"weather icon\"\r\n                              />\r\n                              <div className=\"forecast-uv-container\">\r\n                                 <img className=\"forecast-uv-icon\" src={uv_icon} alt=\"uv icon\"/>\r\n                                 <p className=\"forecast-uv-index\">{element.uvi}</p>\r\n                              </div>\r\n                           </div>\r\n                        );\r\n                     })\r\n                  }\r\n               </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default HourlyForecast;\r\n","import React from 'react';\r\n\r\nimport { getDailyWeather } from '../services/provider';\r\nimport { WEATHER_ICON, WEATHER_ICON_FORMAT } from '../services/provider';\r\nimport { LOCATION } from '../services/location';\r\nimport { timestampToDate } from '../utils';\r\n\r\nclass DailyForecast extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         location: this.props.location,\r\n         isLoading: true,\r\n         weatherData: [],\r\n      };\r\n   }\r\n\r\n   componentDidMount() {\r\n      const location = LOCATION[this.state.location];\r\n\r\n      getDailyWeather(location.coord.lat, location.coord.lon).then((val) => {\r\n         // remove today weather from the daily forecast list\r\n         val.daily.shift();\r\n\r\n         this.setState({\r\n               location: this.props.location,\r\n               isLoading: false,\r\n               weatherData: val.daily,\r\n         });\r\n      });\r\n   }\r\n\r\n   componentDidUpdate(prevProps) {\r\n      if (this.props.location !== prevProps.location) {\r\n         const location = LOCATION[this.props.location];\r\n\r\n         getDailyWeather(location.coord.lat, location.coord.lon).then((val) => {\r\n               // remove today weather from the daily forecast list\r\n               val.daily.shift();\r\n\r\n               this.setState({\r\n                  location: this.props.location,\r\n                  isLoading: false,\r\n                  weatherData: val.daily,\r\n               });\r\n         });\r\n      }\r\n   }\r\n\r\n   render() {\r\n      const { isLoading, weatherData } = this.state;\r\n\r\n      return (\r\n         !isLoading\r\n         &&\r\n         <div className=\"forecast-container\">\r\n            <h2 className=\"section-title\">Dự báo thời tiết 5 ngày tới</h2>\r\n            <div className=\"forecast-card-container\">\r\n               {\r\n                  weatherData.slice(0, 5).map(element => {\r\n                     return (\r\n                        <div key={element.dt} className=\"forecast-card\">\r\n                           <p className=\"date\">{timestampToDate(element.dt)}</p>\r\n                           <p className=\"max-temp\">{Math.round(element.temp.max)} <span>°</span></p>\r\n                           <p className=\"min-temp\">{Math.round(element.temp.min)} <span>°</span></p>\r\n                           <img \r\n                              className=\"forecast-weather-icon\"\r\n                              src={WEATHER_ICON + element.weather[0].icon + WEATHER_ICON_FORMAT}\r\n                              alt=\"weather icon\"\r\n                           />\r\n                        </div>\r\n                     );\r\n                  })\r\n               }\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default DailyForecast;\r\n","export const AIR_QUALITY_LEVEL = {\r\n   1: { score: 1, description: 'good', vietnameseDescription: 'Tốt', },\r\n   2: { score: 2, description: 'fair', vietnameseDescription: 'Khá tốt',},\r\n   3: { score: 3, description: 'moderate', vietnameseDescription: 'Trung bình',},\r\n   4: { score: 4, description: 'poor', vietnameseDescription: 'Kém', },\r\n   5: { score: 5, description: 'very-poor', vietnameseDescription: 'Rất kém', },\r\n};\r\n\r\nexport const UNNECESSARY_POLLUTANT = ['co', 'nh3', 'no', 'no2', 'so2'];\r\n\r\n// Pollution Level Calculation\r\n//\r\n// The pollution level of each pollutant is estimated to be 'poor' when \r\n// the pollutant's concentration reaches it's limit.\r\n//\r\n// - very poor: > 200% limit\r\n// - poor:      (100 => 200)% limit \r\n// - moderate:  (50 => 100)% limit\r\n// - fair:      (25 => 50)% limit\r\n// - good:      (0 => 25)% limit\r\n\r\nexport const POLLUTANT = {\r\n   unit: 'μg/m3',\r\n\r\n   pm10: {\r\n      name: 'PM10',\r\n      limit: '50',\r\n      level: [\r\n         { level: 'good', min: 0, max: 12.5 },\r\n         { level: 'fair', min: 12.5, max: 25 },\r\n         { level: 'moderate', min: 25, max: 50 },\r\n         { level: 'poor', min: 50, max: 100 },\r\n         { level: 'very-poor', min: 100, max: Infinity },\r\n      ]\r\n   },\r\n   pm2_5: {\r\n      name: 'PM2.5',\r\n      limit: '25',\r\n      level: [\r\n         { level: 'good', min: 0, max: 6.25 },\r\n         { level: 'fair', min: 6.25, max: 12.5 },\r\n         { level: 'moderate', min: 12.5, max: 25 },\r\n         { level: 'poor', min: 25, max: 50 },\r\n         { level: 'very-poor', min: 50, max: Infinity },\r\n      ]\r\n   },\r\n   so2: {\r\n      name: 'SO2',\r\n      limit: '50',\r\n      level: [\r\n         { level: 'good', min: 0, max: 12.5 },\r\n         { level: 'fair', min: 12.5, max: 25 },\r\n         { level: 'moderate', min: 25, max: 50 },\r\n         { level: 'poor', min: 50, max: 100 },\r\n         { level: 'very-poor', min: 100, max: Infinity },\r\n      ],\r\n   },\r\n   o3: {\r\n      name: 'O3',\r\n      limit: '120',\r\n      level: [\r\n         { level: 'good', min: 0, max: 30 },\r\n         { level: 'fair', min: 30, max: 60 },\r\n         { level: 'moderate', min: 60, max: 120 },\r\n         { level: 'poor', min: 120, max: 240 },\r\n         { level: 'very-poor', min: 240, max: Infinity },\r\n      ],\r\n   },\r\n   no2: {\r\n      name: 'NO2',\r\n      limit: '200',\r\n      level: [\r\n         { level: 'good', min: 0, max: 50 },\r\n         { level: 'fair', min: 50, max: 100 },\r\n         { level: 'moderate', min: 100, max: 200 },\r\n         { level: 'poor', min: 200, max: 400 },\r\n         { level: 'very-poor', min: 400, max: Infinity },\r\n      ],\r\n   }\r\n};\r\n","import React from 'react';\r\n\r\nimport { getCurrentAirQuality } from '../services/provider';\r\nimport { LOCATION } from '../services/location';\r\nimport { AIR_QUALITY_LEVEL } from '../services/air_quality';\r\n\r\nclass AirQuality extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         location: this.props.location,\r\n         isLoading: true,\r\n         airQualityData: {},\r\n      };\r\n   }\r\n\r\n   componentDidMount() {\r\n      const location = LOCATION[this.state.location];\r\n\r\n      getCurrentAirQuality(location.coord.lat, location.coord.lon).then((data) => {\r\n         this.setState({\r\n            location: this.props.location,\r\n            isLoading: false,\r\n            airQualityData: data.list[0],\r\n         });\r\n      });\r\n   }\r\n\r\n   componentDidUpdate(prevProps) {\r\n      if (this.props.location !== prevProps.location) {\r\n         const location = LOCATION[this.props.location];\r\n\r\n         getCurrentAirQuality(location.coord.lat, location.coord.lon).then((data) => {\r\n            this.setState({\r\n               location: this.props.location,\r\n               isLoading: false,\r\n               airQualityData: data.list[0],\r\n            });\r\n         });\r\n      }\r\n   }\r\n\r\n   render() {\r\n      const { isLoading, airQualityData } = this.state;\r\n\r\n      return (\r\n         !isLoading\r\n         &&\r\n         <div className=\"air-quality-container\">\r\n            <p className=\"air-quality-title\">Chất lượng không khí</p>\r\n            <p className={\"air-quality-score quality-\" + AIR_QUALITY_LEVEL[airQualityData.main.aqi].description}>\r\n               {airQualityData.main.aqi}\r\n            </p>\r\n            <ul className=\"air-quality-level\">\r\n               {\r\n                  Object.values(AIR_QUALITY_LEVEL).map((level) => {\r\n                     return (\r\n                        <li key={level.score}>\r\n                           {level.score}\r\n                           <span className=\"air-quality-description\">\r\n                              {level.vietnameseDescription}\r\n                           </span>\r\n                        </li>\r\n                     );\r\n                  })\r\n               }\r\n            </ul>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default AirQuality;\r\n","import React from 'react';\r\n\r\nimport { getCurrentAirQuality } from '../services/provider';\r\nimport { LOCATION } from '../services/location';\r\nimport { POLLUTANT, UNNECESSARY_POLLUTANT } from '../services/air_quality';\r\n\r\nclass Pollutant extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         location: this.props.location,\r\n         isLoading: true,\r\n         pollutantData: {},\r\n      };\r\n\r\n      this.removeUnnecessaryPollutant = this.removeUnnecessaryPollutant.bind(this);\r\n      this.classifyPollutionLevel = this.classifyPollutionLevel.bind(this);\r\n   }\r\n\r\n   componentDidMount() {\r\n      const location = LOCATION[this.state.location];\r\n\r\n      getCurrentAirQuality(location.coord.lat, location.coord.lon).then((data) => {\r\n         data.list[0].components = this.removeUnnecessaryPollutant(data.list[0].components);\r\n\r\n         this.setState({\r\n            location: this.props.location,\r\n            isLoading: false,\r\n            pollutantData: data.list[0],\r\n         });\r\n      });\r\n   }\r\n\r\n   componentDidUpdate(prevProps) {\r\n      if (this.props.location !== prevProps.location) {\r\n         const location = LOCATION[this.props.location];\r\n\r\n         getCurrentAirQuality(location.coord.lat, location.coord.lon).then((data) => {\r\n            data.list[0].components = this.removeUnnecessaryPollutant(data.list[0].components);\r\n            \r\n            this.setState({\r\n               location: this.props.location,\r\n               isLoading: false,\r\n               pollutantData: data.list[0],\r\n            });\r\n         });\r\n      }\r\n   }\r\n\r\n   removeUnnecessaryPollutant(pollutantJson) {\r\n      UNNECESSARY_POLLUTANT.forEach((pollutant) => {\r\n         delete pollutantJson[pollutant];\r\n      });\r\n\r\n      return pollutantJson;\r\n   }\r\n\r\n   classifyPollutionLevel(pollutant, value) {\r\n      let level = '';\r\n      \r\n      POLLUTANT[pollutant].level.forEach(element => {\r\n         if (value >= element.min && value < element.max) {\r\n            level = element.level;\r\n         }\r\n      });\r\n\r\n      return level;\r\n   }\r\n\r\n   render() {\r\n      const { isLoading, pollutantData } = this.state;\r\n\r\n      return (\r\n         !isLoading\r\n         &&\r\n         <div>\r\n            <h3 className=\"pollutant-section-title\">Các chất gây ô nhiễm</h3>\r\n            {\r\n               Object.entries(pollutantData.components).reverse().map(([pollutant, value]) => {\r\n                  return (\r\n                     <div className=\"pollutant\" key={pollutant}>\r\n                        <div className=\"pollutant-detail\">\r\n                           <p className=\"pollutant-name\">{POLLUTANT[pollutant].name}</p>\r\n                           <p>\r\n                              <span className={\"pollutant-value quality-\" + this.classifyPollutionLevel(pollutant, value)}>\r\n                                 {value}\r\n                              </span> \r\n                              <span className=\"pollutant-unit\">{' ' + POLLUTANT.unit}</span>\r\n                           </p>\r\n                        </div>\r\n                        <div className=\"pollutant-detail\">\r\n                           <p className=\"pollutant-unit\">Giới hạn cho phép</p>\r\n                           <p>\r\n                              <span className=\"pollutant-value\">{POLLUTANT[pollutant].limit}</span> \r\n                              <span className=\"pollutant-unit\">{' ' + POLLUTANT.unit}</span>\r\n                           </p>\r\n                        </div>\r\n                     </div>\r\n                  );\r\n               })\r\n            }\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Pollutant;\r\n","import React from 'react';\nimport './App.css';\n\nimport Navbar from './components/Navbar';\nimport CurrentWeather from './components/CurrentWeather';\nimport HourlyForecast from './components/HourlyForecast';\nimport DailyForecast from './components/DailyForecast';\nimport AirQuality from './components/AirQuality';\nimport Pollutant from './components/Pollutant';\n\nclass App extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         location: 'Hà Nội',\n      };\n   }\n\n   handleLocationChange = location => {\n      this.setState({ location });\n   };\n\n   render() {\n      return (\n         <div className=\"App\">\n            <Navbar onOptionChange={this.handleLocationChange}/>\n            <div className=\"content-section\">\n               <div className=\"main-content\">\n                  <CurrentWeather location={this.state.location}/>\n                  <HourlyForecast location={this.state.location}/>\n                  <DailyForecast location={this.state.location}/>\n               </div>\n               <div className=\"sub-content\">\n                  <AirQuality location={this.state.location}/>\n                  <Pollutant location={this.state.location}/>\n               </div>\n            </div>\n         </div>\n      );\n   }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}