{"version":3,"sources":["api/city.js","api/provider.js","utils.js","components/CurrentWeather.js","components/HourlyForecast.js","components/DailyForecast.js","App.js","reportWebVitals.js","index.js"],"names":["city","hagiang","id","name","coord","lat","lon","caobang","langson","dienbien","sonla","yenbai","haiphong","quangninh","bacgiang","hanoi","bacninh","haiduong","hoabinh","namdinh","thanhhoa","nghean","hatinh","quangbinh","quangtri","hue","danang","quangngai","kontum","binhdinh","gialai","daklak","lamdong","phuyen","khanhhoa","binhduong","binhthuan","tphcm","vungtau","bentre","angiang","cantho","camau","cities","value","title","apiKey","dailyWeather","URL","currentWeather","weatherIcon","weatherIconFormat","getCurrentWeather","a","params","appid","exclude","units","url","toString","search","URLSearchParams","fetch","response","json","getHourlyWeather","getDailyWeather","timestampToTime","timestamp","defaultDate","Date","getHours","getMinutes","substr","timestampToDate","getDate","getMonth","CurrentWeather","props","state","location","temp","weather","weather_icon","feels_like","clouds","humidity","uv","visibility","wind_speed","sunrise","sunset","this","then","val","setState","current","main","icon","uvi","clearInterval","interval","prevProps","className","Math","round","src","alt","React","Component","HourlyForecast","weatherData","console","log","hourly","slice","map","element","dt","DailyForecast","daily","shift","max","min","App","handleOptionChange","event","target","onChange","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4fb7b9c2.chunk.js","sourcesContent":["export const city = {\r\n    hagiang: {\r\n        id: '1581030',\r\n        name: 'Hà Giang',\r\n        coord: {\r\n            lat: '22.75', lon: '105',\r\n        }\r\n    },\r\n    caobang: {\r\n        id: '1586185',\r\n        name: 'Cao Bằng',\r\n        coord: {\r\n            lat: '22.6667', lon: '106.25',\r\n        }\r\n    },\r\n    langson: {\r\n        id: '1576632',\r\n        name: 'Lạng Sơn',\r\n        coord: {\r\n            lat: '21.75', lon: '106.5',\r\n        }\r\n    },\r\n    dienbien: {\r\n        id: '1583477',\r\n        name: 'Điện Biên',\r\n        coord: {\r\n            lat: '21.3833', lon: '103.0167',\r\n        }\r\n    },\r\n    sonla: {\r\n        id: '1567643',\r\n        name: 'Sơn La',\r\n        coord: {\r\n            lat: '21.1667', lon: '104',\r\n        }\r\n    },\r\n    yenbai: {\r\n        id: '1559978',\r\n        name: 'Yên Bái',\r\n        coord: {\r\n            lat: '21.5', lon: '104.6667',\r\n        }\r\n    },\r\n    haiphong: {\r\n        id: '1581297',\r\n        name: 'Hải Phòng',\r\n        coord: {\r\n            lat: '20.8333', lon: '106.5833',\r\n        }\r\n    },\r\n    quangninh: {\r\n        id: '1568758',\r\n        name: 'Quảng Ninh',\r\n        coord: {\r\n            lat: '21.25', lon: '107.3333',\r\n        }\r\n    },\r\n    bacgiang: {\r\n        id: '1905419',\r\n        name: 'Bắc Giang',\r\n        coord: {\r\n            lat: '21.3333', lon: '106.3333',\r\n        }\r\n    },\r\n    hanoi: {\r\n        id: '1581130',\r\n        name: 'Hà Nội',\r\n        coord: {\r\n            lat: '21.0245', lon: '105.8412',\r\n        }\r\n    },\r\n    bacninh: {\r\n        id: '1591449',\r\n        name: 'Bắc Ninh',\r\n        coord: {\r\n            lat: '21.183331', lon: '106.050003',\r\n        }\r\n    },\r\n    haiduong: {\r\n        id: '1581326',\r\n        name: 'Hải Dương',\r\n        coord: {\r\n            lat: '20.933331', lon: '106.316673',\r\n        }\r\n    },\r\n    hoabinh: {\r\n        id: '1580830',\r\n        name: 'Hòa Bình',\r\n        coord: {\r\n            lat: '20.81333', lon: '105.338333',\r\n        }\r\n    },\r\n    namdinh: {\r\n        id: '1573517',\r\n        name: 'Nam Định',\r\n        coord: {\r\n            lat: '20.4167', lon: '106.1667',\r\n        }\r\n    },\r\n    thanhhoa: {\r\n        id: '1566166',\r\n        name: 'Thanh Hóa',\r\n        coord: {\r\n            lat: '19.8', lon: '105.7667',\r\n        }\r\n    },\r\n    nghean: {\r\n        id: '1559969',\r\n        name: 'Nghệ An',\r\n        coord: {\r\n            lat: '19.3333', lon: '104.8333',\r\n        }\r\n    },\r\n    hatinh: {\r\n        id: '1581047',\r\n        name: 'Hà Tĩnh',\r\n        coord: {\r\n            lat: '18.33333', lon: '105.900002',\r\n        }\r\n    },\r\n    quangbinh: {\r\n        id: '1568839',\r\n        name: 'Quảng Bình',\r\n        coord: {\r\n            lat: '17.5', lon: '106.3333',\r\n        }\r\n    },\r\n    quangtri: {\r\n        id: '1568738',\r\n        name: 'Quảng Trị',\r\n        coord: {\r\n            lat: '16.75', lon: '107.2',\r\n        }\r\n    },\r\n    hue: {\r\n        id: '1580240',\r\n        name: 'Thừa Thiên - Huế',\r\n        coord: {\r\n            lat: '16.4667', lon: '107.6',\r\n        }\r\n    },\r\n    danang: {\r\n        id: '1905468',\r\n        name: 'Đà Nẵng',\r\n        coord: {\r\n            lat: '16.0833', lon: '108.0833',\r\n        }\r\n    },\r\n    quangngai: {\r\n        id: '1568770',\r\n        name: 'Quảng Ngãi',\r\n        coord: {\r\n            lat: '15.1167', lon: '108.8',\r\n        }\r\n    },\r\n    kontum: {\r\n        id: '1578500',\r\n        name: 'Kon Tum',\r\n        coord: {\r\n            lat: '14.35', lon: '108.0',\r\n        }\r\n    },\r\n    binhdinh: {\r\n        id: '1568770',\r\n        name: 'Bình Định',\r\n        coord: {\r\n            lat: '14.16667', lon: '109.0',\r\n        }\r\n    },\r\n    gialai: {\r\n        id: '1581088',\r\n        name: 'Gia Lai',\r\n        coord: {\r\n            lat: '13.75', lon: '108.25',\r\n        }\r\n    },\r\n    daklak: {\r\n        id: '1584169',\r\n        name: 'Đắk Lắk',\r\n        coord: {\r\n            lat: '12.83333', lon: '108.166672',\r\n        }\r\n    },\r\n    lamdong: {\r\n        id: '1577882',\r\n        name: 'Lâm Đồng',\r\n        coord: {\r\n            lat: '11.5', lon: '108.3333',\r\n        }\r\n    },\r\n    phuyen: {\r\n        id: '1569805',\r\n        name: 'Phú Yên',\r\n        coord: {\r\n            lat: '13.16667', lon: '109.166672',\r\n        }\r\n    },\r\n    khanhhoa: {\r\n        id: '1579634',\r\n        name: 'Khánh Hòa',\r\n        coord: {\r\n            lat: '12.3333', lon: '109',\r\n        }\r\n    },\r\n    binhduong: {\r\n        id: '1905475',\r\n        name: 'Bình Dương',\r\n        coord: {\r\n            lat: '11.1667', lon: '106.6667',\r\n        }\r\n    },\r\n    binhthuan: {\r\n        id: '1581882',\r\n        name: 'Bình Thuận',\r\n        coord: {\r\n            lat: '11.08333', lon: '108.0',\r\n        }\r\n    },\r\n    tphcm: {\r\n        id: '1580578',\r\n        name: 'TP Hồ Chí Minh',\r\n        coord: {\r\n            lat: '10.8333', lon: '106.6667',\r\n        }\r\n    },\r\n    vungtau: {\r\n        id: '1562414',\r\n        name: 'Bà Rịa - Vũng Tàu',\r\n        coord: {\r\n            lat: '10.346', lon: '107.0843',\r\n        }\r\n    },\r\n    bentre: {\r\n        id: '1587974',\r\n        name: 'Bến Tre',\r\n        coord: {\r\n            lat: '10.16667', lon: '106.5',\r\n        }\r\n    },\r\n    angiang: {\r\n        id: '1594446',\r\n        name: 'An Giang',\r\n        coord: {\r\n            lat: '10.5', lon: '105.166672',\r\n        }\r\n    },\r\n    cantho: {\r\n        id: '1581188',\r\n        name: 'Cần Thơ',\r\n        coord: {\r\n            lat: '9.8333', lon: '105.6667',\r\n        }\r\n    },\r\n    camau: {\r\n        id: '1586443',\r\n        name: 'Cà Mau',\r\n        coord: {\r\n            lat: '9.1769', lon: '105.15',\r\n        }\r\n    },\r\n};\r\n\r\nexport const cities = [\r\n    {value: 'hanoi', title: 'Hà Nội'},\r\n    {value: 'hagiang', title: 'Hà Giang'},\r\n    {value: 'caobang', title: 'Cao Bằng'},\r\n    {value: 'langson', title: 'Lạng Sơn'},\r\n    {value: 'yenbai', title: 'Yên Bái'},\r\n    {value: 'dienbien', title: 'Điện Biên'},\r\n    {value: 'sonla', title: 'Sơn La'},\r\n    {value: 'haiphong', title: 'Hải Phòng'},\r\n    {value: 'quangninh', title: 'Quảng Ninh'},\r\n    {value: 'bacgiang', title: 'Bắc Giang'},\r\n    {value: 'bacninh', title: 'Bắc Ninh'},\r\n    {value: 'haiduong', title: 'Hải Dương'},\r\n    {value: 'hoabinh', title: 'Hòa Bình'},\r\n    {value: 'namdinh', title: 'Nam Định'},\r\n    {value: 'thanhhoa', title: 'Thanh Hóa'},\r\n    {value: 'nghean', title: 'Nghệ An'},\r\n    {value: 'hatinh', title: 'Hà Tĩnh'},\r\n    {value: 'quangbinh', title: 'Quảng Bình'},\r\n    {value: 'quangtri', title: 'Quảng Trị'},\r\n    {value: 'hue', title: 'Thừa Thiên - Huế'},\r\n    {value: 'danang', title: 'Đà Nẵng'},\r\n    {value: 'quangngai', title: 'Quảng Ngãi'},\r\n    {value: 'kontum', title: 'Kon Tum'},\r\n    {value: 'binhdinh', title: 'Bình Định'},\r\n    {value: 'gialai', title: 'Gia Lai'},\r\n    {value: 'daklak', title: 'Đắk Lắk'},\r\n    {value: 'lamdong', title: 'Lâm Đồng'},\r\n    {value: 'phuyen', title: 'Phú Yên'},\r\n    {value: 'khanhhoa', title: 'Khánh Hòa'},\r\n    {value: 'binhduong', title: 'Bình Dương'},\r\n    {value: 'binhthuan', title: 'Bình Thuận'},\r\n    {value: 'tphcm', title: 'TP Hồ Chí Minh'},\r\n    {value: 'vungtau', title: 'Bà Rịa - Vũng Tàu'},\r\n    {value: 'bentre', title: 'Bến Tre'},\r\n    {value: 'angiang', title: 'An Giang'},\r\n    {value: 'cantho', title: 'Cần Thơ'},\r\n    {value: 'camau', title: 'Cà Mau'},\r\n];","export const apiKey = '373a59a53a6e12d6492b8823e6963f5f';\r\n\r\nexport const dailyWeather =  new URL(\"https://api.openweathermap.org/data/2.5/onecall?\");\r\nexport const currentWeather = new URL(\"https://api.openweathermap.org/data/2.5/onecall?\");\r\n\r\n// Weather icon link\r\nexport const weatherIcon = new URL(\"http://openweathermap.org/img/wn/\");\r\nexport const weatherIconFormat = \"@2x.png\";\r\n\r\nexport async function getCurrentWeather(lat, lon) {\r\n    const params = {\r\n        appid: apiKey,\r\n        lat: lat,\r\n        lon: lon,\r\n        exclude: 'minutely,hourly,daily',\r\n        units: 'metric',\r\n    };\r\n    let url = new URL(currentWeather.toString());\r\n    url.search = new URLSearchParams(params).toString();\r\n\r\n    const response = await fetch(url);\r\n    const json = await response.json();\r\n\r\n    return json;\r\n}\r\n\r\nexport async function getHourlyWeather(lat,lon) {\r\n    const params = {\r\n        appid: apiKey,\r\n        lat: lat,\r\n        lon: lon,\r\n        exclude: 'current,minutely,daily',\r\n        units: 'metric',\r\n    }\r\n    let url = new URL(dailyWeather.toString());\r\n    url.search = new URLSearchParams(params).toString();\r\n\r\n    const response = await fetch(url);\r\n    const json = await response.json();\r\n\r\n    return json;\r\n}\r\n\r\nexport async function getDailyWeather(lat, lon) {\r\n    const params = {\r\n        appid: apiKey,\r\n        lat: lat,\r\n        lon: lon,\r\n        exclude: 'current,minutely,hourly',\r\n        units: 'metric',\r\n    };\r\n    let url = new URL(dailyWeather.toString());\r\n    url.search = new URLSearchParams(params).toString();\r\n\r\n    const response = await fetch(url);\r\n    const json = await response.json();\r\n\r\n    return json;\r\n}\r\n","export function timestampToTime(timestamp) {\r\n    let defaultDate = new Date(timestamp * 1000);\r\n\r\n    let hours = defaultDate.getHours();\r\n    let minutes = '0' + defaultDate.getMinutes();\r\n\r\n    let time = hours + ':' + minutes.substr(-2);\r\n\r\n    return time;\r\n}\r\n\r\nexport function timestampToDate(timestamp) {\r\n    let defaultDate = new Date(timestamp * 1000);\r\n\r\n    let day = defaultDate.getDate();\r\n    let month = defaultDate.getMonth() + 1;\r\n\r\n    let date = day + '-' + month;\r\n    \r\n    return date;\r\n}","import React from 'react';\r\n\r\nimport {getCurrentWeather} from '../api/provider.js';\r\nimport {weatherIcon, weatherIconFormat} from '../api/provider.js';\r\nimport {city} from '../api/city.js';\r\nimport {timestampToTime} from '../utils.js';\r\n\r\nclass CurrentWeather extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            location: this.props.location,\r\n            temp: '',\r\n            weather: '',\r\n            weather_icon: '',\r\n            feels_like: '',\r\n            clouds: '',\r\n            humidity: '',\r\n            uv: '',\r\n            visibility: '',\r\n            wind_speed: '',\r\n            sunrise: '',\r\n            sunset: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const location = city[`${this.state.location}`];\r\n        \r\n        getCurrentWeather(location.coord.lat, location.coord.lon).then(val => {\r\n            this.setState({\r\n                location: location.name,\r\n                temp: val.current.temp,\r\n                weather: val.current.weather[0].main,\r\n                weather_icon: val.current.weather[0].icon,\r\n                feels_like: val.current.feels_like,\r\n                clouds: val.current.clouds,\r\n                humidity: val.current.humidity,\r\n                uv: val.current.uvi,\r\n                visibility: val.current.visibility,\r\n                wind_speed: val.current.wind_speed,\r\n                sunrise: val.current.sunrise,\r\n                sunset: val.current.sunset,\r\n            });\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.location !== prevProps.location) {\r\n            const location = city[`${this.props.location}`];\r\n\r\n            getCurrentWeather(location.coord.lat, location.coord.lon).then(val => {\r\n                this.setState({\r\n                    location: location.name,\r\n                    temp: val.current.temp,\r\n                    weather: val.current.weather[0].main,\r\n                    weather_icon: val.current.weather[0].icon,\r\n                    feels_like: val.current.feels_like,\r\n                    clouds: val.current.clouds,\r\n                    humidity: val.current.humidity,\r\n                    uv: val.current.uvi,\r\n                    visibility: val.current.visibility,\r\n                    wind_speed: val.current.wind_speed,\r\n                    sunrise: val.current.sunrise,\r\n                    sunset: val.current.sunset,\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"current-container\">\r\n                <div className=\"current-main\">\r\n                    <p className=\"current-location\">{this.state.location}</p>\r\n                    <p className=\"current-temp\">{Math.round(this.state.temp)} °C</p>\r\n                    <img \r\n                        className=\"current-weather-icon\"\r\n                        src={weatherIcon + this.state.weather_icon + weatherIconFormat} \r\n                        alt=\"weather icon\"\r\n                    />\r\n                </div>\r\n                <div className=\"current-details\">\r\n                    <table className=\"table-details\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Nhiệt độ cảm nhận</td>\r\n                                <td className=\"detail-val\">{Math.round(this.state.feels_like)} °C</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Độ ẩm</td>\r\n                                <td className=\"detail-val\">{this.state.humidity} %</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Tầm nhìn xa</td>\r\n                                <td className=\"detail-val\">{this.state.visibility / 1000} km</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Mặt trời mọc</td>\r\n                                <td className=\"detail-val\">{timestampToTime(this.state.sunrise)}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <table className=\"table-details\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Tỉ lệ mây</td>\r\n                                <td className=\"detail-val\">{this.state.clouds} %</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Chỉ số UV</td>\r\n                                <td className=\"detail-val\">{this.state.uv}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Gió</td>\r\n                                <td className=\"detail-val\">{Math.round(this.state.wind_speed * 3.6)} km/h</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Mặt trời lặn</td>\r\n                                <td className=\"detail-val\">{timestampToTime(this.state.sunset)}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CurrentWeather;","import React from 'react';\r\n\r\nimport {getHourlyWeather} from '../api/provider.js';\r\nimport {weatherIcon, weatherIconFormat} from '../api/provider.js';\r\nimport {city} from '../api/city.js';\r\nimport {timestampToTime} from '../utils.js';\r\n\r\nclass HourlyForecast extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            location: this.props.location,\r\n            weatherData: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const location = city[`${this.state.location}`];\r\n\r\n        getHourlyWeather(location.coord.lat, location.coord.lon).then(val => {\r\n            console.log(val);\r\n            this.setState({\r\n                location: this.props.location,\r\n                weatherData: val.hourly,\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.location !== prevProps.location) {\r\n            const location = city[`${this.props.location}`];\r\n\r\n            getHourlyWeather(location.coord.lat, location.coord.lon).then(val => {\r\n                console.log(val);\r\n                this.setState({\r\n                    location: this.props.location,\r\n                    weatherData: val.hourly,\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"forecast-container\">\r\n                <h2 className=\"section-title\">Dự báo thời tiết hôm nay</h2>\r\n                <div className=\"forecast-card-container\">\r\n                    {\r\n                        this.state.weatherData.slice(0, 5).map(element => {\r\n                            return (\r\n                                <div key={element.dt} className=\"forecast-card\">\r\n                                    <p className=\"time\">{timestampToTime(element.dt)}</p>\r\n                                    <p className=\"max-temp\">{Math.round(element.temp)} <span>°</span></p>\r\n                                    <img \r\n                                        className=\"forecast-weather-icon\"\r\n                                        src={weatherIcon + element.weather[0].icon + weatherIconFormat}\r\n                                        alt=\"weather icon\"\r\n                                    />\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HourlyForecast;","import React from 'react';\r\n\r\nimport {getDailyWeather} from '../api/provider.js';\r\nimport {weatherIcon, weatherIconFormat} from '../api/provider.js';\r\nimport {city} from '../api/city.js';\r\nimport {timestampToDate} from '../utils.js';\r\n\r\nclass DailyForecast extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            location: this.props.location,\r\n            weatherData: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const location = city[`${this.state.location}`];\r\n\r\n        getDailyWeather(location.coord.lat, location.coord.lon).then(val => {\r\n            // remove today weather from the daily forecast list\r\n            val.daily.shift();\r\n\r\n            this.setState({\r\n                location: this.props.location,\r\n                weatherData: val.daily,\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.location !== prevProps.location) {\r\n            const location = city[`${this.props.location}`];\r\n\r\n            getDailyWeather(location.coord.lat, location.coord.lon).then(val => {\r\n                // remove today weather from the daily forecast list\r\n                val.daily.shift();\r\n\r\n                this.setState({\r\n                    location: this.props.location,\r\n                    weatherData: val.daily,\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"forecast-container\">\r\n                <h2 className=\"section-title\">Dự báo thời tiết 5 ngày tới</h2>\r\n                <div className=\"forecast-card-container\">\r\n                    {\r\n                        this.state.weatherData.slice(0, 5).map(element => {\r\n                            return (\r\n                                <div key={element.dt} className=\"forecast-card\">\r\n                                    <p className=\"date\">{timestampToDate(element.dt)}</p>\r\n                                    <p className=\"max-temp\">{Math.round(element.temp.max)} <span>°</span></p>\r\n                                    <p className=\"min-temp\">{Math.round(element.temp.min)} <span>°</span></p>\r\n                                    <img \r\n                                        className=\"forecast-weather-icon\"\r\n                                        src={weatherIcon + element.weather[0].icon + weatherIconFormat}\r\n                                        alt=\"weather icon\"\r\n                                    />\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DailyForecast;","import React from 'react';\nimport './App.css';\n\nimport {cities} from './api/city.js';\nimport CurrentWeather from './components/CurrentWeather.js';\nimport HourlyForecast from './components/HourlyForecast.js';\nimport DailyForecast from './components/DailyForecast.js';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            location: 'hanoi',\n        };\n    }\n\n    handleOptionChange = (event) => {\n        this.setState({ location: event.target.value });\n    };\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"form\">\n                    <select onChange={this.handleOptionChange}>\n                        {\n                            cities.map(element => {\n                                return <option value={element.value} key={element.value}>{element.title}</option>;\n                            })\n                        }\n                    </select>\n                </div>\n                <CurrentWeather location={this.state.location}/>\n                <HourlyForecast location={this.state.location}/>\n                <DailyForecast location={this.state.location}/>\n            </div>\n        );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}