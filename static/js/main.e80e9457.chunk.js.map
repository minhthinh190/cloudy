{"version":3,"sources":["api/location.js","components/LocationList.js","components/TravelLocationList.js","components/Navbar.js","api/provider.js","utils.js","components/CurrentWeather.js","uv_icon.png","components/HourlyForecast.js","components/DailyForecast.js","App.js","reportWebVitals.js","index.js"],"names":["areaList","name","sub_area","location","value","title","travelLocationList","inside","province","area","coord","lon","lat","LocationList","props","handleLocationSelect","e","onLocationChange","target","className","map","locationList","onClick","unshift","TravelLocationList","Navbar","href","onOptionChange","class","apiKey","dailyWeather","URL","currentWeather","weatherIcon","weatherIconFormat","getCurrentWeather","a","params","appid","exclude","units","url","toString","search","URLSearchParams","fetch","response","json","getHourlyWeather","getDailyWeather","timestampToTime","timestamp","defaultDate","Date","getHours","getMinutes","substr","timestampToDate","getDate","getMonth","toVietnamese","description","translation","CurrentWeather","state","temp","weather","weather_icon","feels_like","clouds","humidity","uv","visibility","wind_speed","sunrise","sunset","this","then","val","setState","current","icon","uvi","clearInterval","interval","prevProps","console","log","Math","round","src","alt","React","Component","HourlyForecast","weatherData","hourly","slice","element","dt","uv_icon","DailyForecast","daily","shift","max","min","App","handleLocationChange","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e80e9457.chunk.js","sourcesContent":["export const areaList = [\r\n   {\r\n      name: 'Bắc Bộ',\r\n      sub_area: [\r\n         {\r\n               name: 'Đồng bằng sông Hồng',\r\n               location: [\r\n                  { value: 'Hà Nội', title: 'Hà Nội' },\r\n                  { value: 'Bắc Ninh', title: 'Bắc Ninh' },\r\n                  { value: 'Hải Dương', title: 'Hải Dương' },\r\n                  { value: 'Nam Định', title: 'Nam Định' },\r\n                  { value: 'Hải Phòng', title: 'Hải Phòng' },\r\n               ],\r\n         },\r\n         {\r\n               name: 'Tây Bắc Bộ',\r\n               location: [\r\n                  { value: 'Điện Biên', title: 'Điện Biên' },\r\n                  { value: 'Sơn La', title: 'Sơn La' },\r\n                  { value: 'Yên Bái', title: 'Yên Bái' },\r\n                  { value: 'Hòa Bình', title: 'Hòa Bình' },\r\n               ],\r\n         },\r\n         {\r\n               name: 'Đông Bắc Bộ',\r\n               location: [\r\n                  { value: 'Hà Giang', title: 'Hà Giang' },\r\n                  { value: 'Cao Bằng', title: 'Cao Bằng' },\r\n                  { value: 'Lạng Sơn', title: 'Lạng Sơn' },\r\n                  { value: 'Quảng Ninh', title: 'Quảng Ninh' },\r\n                  { value: 'Bắc Giang', title: 'Bắc Giang' },\r\n               ],\r\n         },\r\n      ],\r\n   },\r\n   {\r\n      name: 'Trung Bộ',\r\n      sub_area: [\r\n         {\r\n               name: 'Bắc Trung Bộ',\r\n               location: [\r\n                  { value: 'Thanh Hóa', title: 'Thanh Hóa' },\r\n                  { value: 'Nghệ An', title: 'Nghệ An' },\r\n                  { value: 'Hà Tĩnh', title: 'Hà Tĩnh' },\r\n                  { value: 'Quảng Bình', title: 'Quảng Bình' },\r\n                  { value: 'Quảng Trị', title: 'Quảng Trị' },\r\n                  { value: 'Thừa Thiên - Huế', title: 'Thừa Thiên - Huế' },\r\n               ],\r\n         },\r\n         {\r\n               name: 'Duyên hải Nam Trung Bộ',\r\n               location: [\r\n                  { value: 'Đà Nẵng', title: 'Đà Nẵng' },\r\n                  { value: 'Quảng Ngãi', title: 'Quảng Ngãi' },\r\n                  { value: 'Bình Định', title: 'Bình Định' },\r\n                  { value: 'Phú Yên', title: 'Phú Yên' },\r\n                  { value: 'Khánh Hòa', title: 'Khánh Hòa' },\r\n                  { value: 'Bình Thuận', title: 'Bình Thuận' },\r\n               ],\r\n         },\r\n         {\r\n               name: 'Tây nguyên',\r\n               location: [\r\n                  { value: 'Gia Lai', title: 'Gia Lai' },\r\n                  { value: 'Đắk Lắk', title: 'Đắk Lắk' },\r\n                  { value: 'Lâm Đồng', title: 'Lâm Đồng' },\r\n                  { value: 'Kon Tum', title: 'Kon Tum' },\r\n               ],\r\n         },\r\n      ],\r\n   },\r\n   {\r\n      name: 'Nam Bộ',\r\n      sub_area: [\r\n         {\r\n               name: 'Đông Nam Bộ',\r\n               location: [\r\n                  { value: 'TP Hồ Chí Minh', title: 'TP Hồ Chí Minh' },\r\n                  { value: 'Bình Dương', title: 'Bình Dương' },\r\n                  { value: 'Bà Rịa - Vũng Tàu', title: 'Bà Rịa - Vũng Tàu' },\r\n               ],\r\n         },\r\n         {\r\n               name: 'Đồng bằng sông Cửu Long',\r\n               location: [\r\n                  { value: 'Bến Tre', title: 'Bến Tre' },\r\n                  { value: 'An Giang', title: 'An Giang' },\r\n                  { value: 'Cần Thơ', title: 'Cần Thơ' },\r\n                  { value: 'Cà Mau', title: 'Cà Mau' },\r\n               ],\r\n         },\r\n      ],\r\n   },\r\n];\r\n\r\nexport const travelLocationList = [\r\n   {\r\n      name: 'Bắc Bộ',\r\n      sub_area: [\r\n         {\r\n               name: 'Đồng bằng sông Hồng',\r\n               location: [\r\n                  { value: 'Đại Lải', title: 'Đại Lải', inside: 'Vĩnh Phúc' },\r\n                  { value: 'Tam Đảo', title: 'Tam Đảo', inside: 'Vĩnh Phúc' },\r\n                  { value: 'Cát Bà', title: 'Cát Bà', inside: 'Hải Phòng' },\r\n                  { value: 'Đồ Sơn', title: 'Đồ Sơn', inside: 'Hải Phòng' },\r\n                  { value: 'Tràng An', title: 'Tràng An', inside: 'Ninh Bình' },\r\n                  { value: 'Hoa Lư', title: 'Hoa Lư', inside: 'Ninh Bình' },\r\n               ],\r\n         },\r\n         {\r\n               name: 'Tây Bắc Bộ',\r\n               location: [\r\n                  { value: 'Sa Pa', title: 'Sa Pa', inside: 'Lào Cai' },\r\n                  { value: 'Ô Quy Hồ', title: 'Ô Quy Hồ', inside: 'Lai Châu' },\r\n                  { value: 'Phanxipang', title: 'Phanxipang', inside: 'Lào Cai' },\r\n                  { value: 'Mù Cang Chải', title: 'Mù Cang Chải', inside: 'Yên Bái' },\r\n                  { value: 'Tà Xùa', title: 'Tà Xùa', inside: 'Sơn La' },\r\n                  { value: 'Mai Châu', title: 'Mai Châu', inside: 'Hòa Bình' },\r\n               ],\r\n         },\r\n         {\r\n               name: 'Đông Bắc Bộ',\r\n               location: [\r\n                  { value: 'Mã Pí Lèng', title: 'Mã Pí Lèng', inside: 'Hà Giang' },\r\n                  { value: 'Bản Giốc', title: 'Bản Giốc', inside: 'Cao Bằng' },\r\n                  { value: 'Hồ Ba Bể', title: 'Hồ Ba Bể', inside: 'Bắc Kạn' },\r\n                  { value: 'Yên Tử', title: 'Yên Tử', inside: 'Quảng Ninh' },\r\n                  { value: 'Hạ Long', title: 'Hạ Long', inside: 'Quảng Ninh' },\r\n                  { value: 'Cô Tô', title: 'Cô Tô', inside: 'Quảng Ninh' },\r\n               ],\r\n         },\r\n      ],\r\n   },\r\n   {\r\n      name: 'Trung Bộ',\r\n      sub_area: [\r\n         {\r\n               name: 'Bắc Trung Bộ',\r\n               location: [\r\n                  { value: 'Sầm Sơn', title: 'Sầm Sơn', inside: 'Thanh Hóa' },\r\n                  { value: 'Cửa Lò', title: 'Cửa Lò', inside: 'Nghệ An' },\r\n                  { value: 'Bãi Lữ', title: 'Bãi Lữ', inside: 'Nghệ An' },\r\n                  { value: 'Phong Nha - Kẻ Bàng', title: 'Phong Nha - Kẻ Bàng', inside: 'Quảng Bình' },\r\n                  { value: 'Sơn Đoòng', title: 'Sơn Đoòng', inside: 'Quảng Bình' },\r\n                  { value: 'Lăng Cô', title: 'Lăng Cô', inside: 'Thừa Thiên - Huế' },\r\n               ],\r\n         },\r\n         {\r\n               name: 'Duyên hải Nam Trung Bộ',\r\n               location: [\r\n                  { value: 'Bà Nà', title: 'Bà Nà', inside: 'Đà Nẵng' },\r\n                  { value: 'Mỹ Sơn', title: 'Mỹ Sơn', inside: 'Quảng Nam' },\r\n                  { value: 'Hội An', title: 'Hội An', inside: 'Quảng Nam' },\r\n                  { value: 'Nha Trang', title: 'Nha Trang', inside: 'Khánh Hòa' },\r\n                  { value: 'Lý Sơn', title: 'Lý Sơn', inside: 'Quảng Ngãi' },\r\n                  { value: 'Bãi Xép', title: 'Bãi Xép', inside: 'Phú Yên' },\r\n                  { value: 'Mũi Né', title: 'Mũi Né', inside: 'Bình Thuận' },\r\n               ],\r\n         },\r\n         {\r\n               name: 'Tây nguyên',\r\n               location: [\r\n                  { value: 'Biển Hồ', title: 'Biển Hồ', inside: 'Gia Lai' },\r\n                  { value: 'Đà Lạt', title: 'Đà Lạt', inside: 'Lâm Đồng' },\r\n                  { value: 'Tà Năng', title: 'Tà Năng', inside: 'Lâm Đồng' },\r\n               ],\r\n         },\r\n      ],\r\n   },\r\n   {\r\n      name: 'Nam Bộ',\r\n      sub_area: [\r\n         {\r\n               name: 'Đông Nam Bộ',\r\n               location: [\r\n                  { value: 'Núi Bà Đen', title: 'Núi Bà Đen', inside: 'Tây Ninh' },\r\n                  { value: 'Giang Điền', title: 'Giang Điền', inside: 'Đồng Nai' },\r\n                  { value: 'Vũng Tàu', title: 'Vũng Tàu', inside: 'Bà Rịa - Vũng Tàu' },\r\n               ],\r\n         },\r\n         {\r\n               name: 'Đồng bằng sông Cửu Long',\r\n               location: [\r\n                  { value: 'Đồng Sen Tháp Mười', title: 'Đồng Sen Tháp Mười', inside: 'Đồng Tháp' },\r\n                  { value: 'Cái Bè', title: 'Cái Bè', inside: 'Tiền Giang' },\r\n                  { value: 'Thất Sơn', title: 'Thất Sơn', inside: 'An Giang' },\r\n                  { value: 'Hòn Đá Bạc', title: 'Hòn Đá Bạc', inside: 'Cà Mau' },\r\n                  { value: 'Phú Quốc', title: 'Phú Quốc', inside: 'Kiên Giang' },\r\n               ],\r\n         },\r\n      ],\r\n   },\r\n];\r\n\r\nexport const province = {\r\n   // TỈNH / THÀNH PHỐ\r\n   // BẮC BỘ\r\n   // Đồng bằng sông Hồng\r\n   'Hà Nội': {\r\n      name: 'Hà Nội', sub_area: 'Đồng bằng sông Hồng', area: 'Bắc Bộ', coord: { lon: '105.8412', lat: '21.0245' },\r\n   },\r\n   'Bắc Ninh' : {\r\n      name: 'Bắc Ninh', sub_area: 'Đồng bằng sông Hồng', area: 'Bắc Bộ', coord: { lon: '106.050003', lat: '21.183331' },\r\n   },\r\n   'Hải Dương' : {\r\n      name: 'Hải Dương', sub_area: 'Đồng bằng sông Hồng', area: 'Bắc Bộ', coord: { lon: '106.316673', lat: '20.933331' },\r\n   },\r\n   'Nam Định' : {\r\n      name: 'Nam Định', sub_area: 'Đồng bằng sông Hồng', area: 'Bắc Bộ', coord: { lon: '106.1667', lat: '20.4167' },\r\n   },\r\n   'Hải Phòng' : {\r\n      name: 'Hải Phòng', sub_area: 'Đồng bằng sông Hồng', area: 'Bắc Bộ', coord: { lon: '106.5833', lat: '20.8333' },\r\n   },\r\n   // Tây Bắc Bộ\r\n   'Điện Biên' : {\r\n      name: 'Điện Biên', sub_area: 'Tây Bắc Bộ', area: 'Bắc Bộ', coord: { lon: '103.0167', lat: '21.3833' },\r\n   },\r\n   'Sơn La' : {\r\n      name: 'Sơn La', sub_area: 'Tây Bắc Bộ', area: 'Bắc Bộ', coord: { lon: '104', lat: '21.1667' },\r\n   },\r\n   'Yên Bái' : {\r\n      name: 'Yên Bái', sub_area: 'Tây Bắc Bộ', area: 'Bắc Bộ', coord: { lon: '104.6667', lat: '21.5' },\r\n   },\r\n   'Hòa Bình' : {\r\n      name: 'Hòa Bình', sub_area: 'Tây Bắc Bộ', area: 'Bắc Bộ', coord: { lon: '105.338333', lat: '20.81333' },\r\n   },\r\n   // Đông Bắc Bộ\r\n   'Hà Giang' : {\r\n      name: 'Hà Giang', sub_area: 'Đông Bắc Bộ', area: 'Bắc Bộ', coord: { lon: '105', lat: '22.75' },\r\n   },\r\n   'Cao Bằng' : {\r\n      name: 'Cao Bằng', sub_area: 'Đông Bắc Bộ', area: 'Bắc Bộ', coord: { lon: '106.25', lat: '22.6667' },\r\n   },\r\n   'Lạng Sơn' : {\r\n      name: 'Lạng Sơn', sub_area: 'Đông Bắc Bộ', area: 'Bắc Bộ', coord: { lon: '106.5', lat: '21.75' },\r\n   },\r\n   'Quảng Ninh' : {\r\n      name: 'Quảng Ninh', sub_area: 'Đông Bắc Bộ', area: 'Bắc Bộ', coord: { lon: '107.3333', lat: '21.25' },\r\n   },\r\n   'Bắc Giang' : {\r\n      name: 'Bắc Giang', sub_area: 'Đông Bắc Bộ', area: 'Bắc Bộ', coord: { lon: '106.3333', lat: '21.3333' },\r\n   },\r\n\r\n   // TRUNG BỘ\r\n   // Bắc Trung Bộ\r\n   'Thanh Hóa' : {\r\n      name: 'Thanh Hóa', sub_area: 'Bắc Trung Bộ', area: 'Trung Bộ', coord: { lon: '105.7667', lat: '19.8' },\r\n   },\r\n   'Nghệ An' : {\r\n      name: 'Nghệ An', sub_area: 'Bắc Trung Bộ', area: 'Trung Bộ', coord: { lon: '104.8333', lat: '19.3333' },\r\n   },\r\n   'Hà Tĩnh' : {\r\n      name: 'Hà Tĩnh', sub_area: 'Bắc Trung Bộ', area: 'Trung Bộ', coord: { lon: '105.900002', lat: '18.33333' },\r\n   },\r\n   'Quảng Bình' : {\r\n      name: 'Quảng Bình', sub_area: 'Bắc Trung Bộ', area: 'Trung Bộ', coord: { lon: '106.3333', lat: '17.5' },\r\n   },\r\n   'Quảng Trị' : {\r\n      name: 'Quảng Trị', sub_area: 'Bắc Trung Bộ', area: 'Trung Bộ', coord: { lon: '107.2', lat: '16.75' },\r\n   },\r\n   'Thừa Thiên - Huế' : {\r\n      name: 'Thừa Thiên - Huế', sub_area: 'Bắc Trung Bộ', area: 'Trung Bộ', coord: { lon: '107.6', lat: '16.4667' },\r\n   },\r\n   // Duyên hải Nam Trung Bộ\r\n   'Đà Nẵng' : {\r\n      name: 'Đà Nẵng', sub_area: 'Duyên hải Nam Trung Bộ', area: 'Trung Bộ', coord: { lon: '108.0833', lat: '16.0833' },\r\n   },\r\n   'Quảng Ngãi' : {\r\n      name: 'Quảng Ngãi', sub_area: 'Duyên hải Nam Trung Bộ', area: 'Trung Bộ', coord: { lon: '108.8', lat: '15.1167' },\r\n   },\r\n   'Bình Định' : {\r\n      name: 'Bình Định', sub_area: 'Duyên hải Nam Trung Bộ', area: 'Trung Bộ', coord: { lon: '109.0', lat: '14.16667' },\r\n   },\r\n   'Phú Yên' : {\r\n      name: 'Phú Yên', sub_area: 'Duyên hải Nam Trung Bộ', area: 'Trung Bộ', coord: { lon: '109.166672', lat: '13.16667' },\r\n   },\r\n   'Khánh Hòa' : {\r\n      name: 'Khánh Hòa', sub_area: 'Duyên hải Nam Trung Bộ', area: 'Trung Bộ', coord: { lon: '109', lat: '12.3333' },\r\n   },\r\n   'Bình Thuận' : {\r\n      name: 'Bình Thuận', sub_area: 'Duyên hải Nam Trung Bộ', area: 'Trung Bộ', coord: { lon: '108.0', lat: '11.08333' },\r\n   },\r\n   // Tây Nguyên\r\n   'Gia Lai' : {\r\n      name: 'Gia Lai', sub_area: 'Tây Nguyên', area: 'Trung Bộ', coord: { lon: '108.25', lat: '13.75' },\r\n   },\r\n   'Đắk Lắk' : {\r\n      name: 'Đắk Lắk', sub_area: 'Tây Nguyên', area: 'Trung Bộ', coord: { lon: '108.166672', lat: '12.83333' },\r\n   },\r\n   'Lâm Đồng' : {\r\n      name: 'Lâm Đồng', sub_area: 'Tây Nguyên', area: 'Trung Bộ', coord: { lon: '108.3333', lat: '11.5' },\r\n   },\r\n   'Kon Tum' : {\r\n      name: 'Kon Tum', sub_area: 'Tây Nguyên', area: 'Trung Bộ', coord: { lon: '108.0', lat: '14.35' },\r\n   },\r\n\r\n   // NAM BỘ\r\n   // Đông Nam Bộ\r\n   'TP Hồ Chí Minh' : {\r\n      name: 'TP Hồ Chí Minh', sub_area: 'Đông Nam Bộ', area: 'Nam Bộ', coord: { lon: '106.6667', lat: '10.8333' },\r\n   },\r\n   'Bình Dương' : {\r\n      name: 'Bình Dương', sub_area: 'Đông Nam Bộ', area: 'Nam Bộ', coord: { lon: '106.6667', lat: '11.1667' },\r\n   },\r\n   'Bà Rịa - Vũng Tàu' : {\r\n      name: 'Bà Rịa - Vũng Tàu', sub_area: 'Đông Nam Bộ', area: 'Nam Bộ', coord: { lon: '107.0843', lat: '10.346' },\r\n   },\r\n   // Đồng bằng sông Cửu Long\r\n   'Bến Tre' : {\r\n      name: 'Bến Tre', sub_area: 'Đồng bằng sông Cửu Long', area: 'Nam Bộ', coord: { lon: '106.5', lat: '10.16667' },\r\n   },\r\n   'An Giang' : {\r\n      name: 'An Giang', sub_area: 'Đồng bằng sông Cửu Long', area: 'Nam Bộ', coord: { lon: '105.166672', lat: '10.5' },\r\n   },\r\n   'Cần Thơ' : {\r\n      name: 'Cần Thơ', sub_area: 'Đồng bằng sông Cửu Long', area: 'Nam Bộ', coord: { lon: '105.6667', lat: '9.8333' },\r\n   },\r\n   'Cà Mau' : {\r\n      name: 'Cà Mau', sub_area: 'Đồng bằng sông Cửu Long', area: 'Nam Bộ', coord: { lon: '105.15', lat: '9.1769' },\r\n   },\r\n\r\n   // ĐỊA ĐIỂM DU LỊCH\r\n   // BẮC BỘ\r\n   // Đồng bằng sông Hồng\r\n   'Đại Lải': {\r\n      name: 'Đại Lải', inside: 'Vĩnh Phúc', coord: { lon: '105.714722', lat: '21.325' },\r\n   },\r\n   'Tam Đảo': {\r\n      name: 'Tam Đảo', inside: 'Vĩnh Phúc', coord: { lon: '105.616667', lat: '21.393611' },\r\n   },\r\n   'Cát Bà': {\r\n      name: 'Cát Bà', inside: 'Hải Phòng', coord: { lon: '107.057778', lat: '20.723889' },\r\n   },\r\n   'Đồ Sơn': {\r\n      name: 'Đồ Sơn', inside: 'Hải Phòng', coord: { lon: '106.789444', lat: '20.713611' },\r\n   },\r\n   'Tràng An': {\r\n      name: 'Tràng An', inside: 'Ninh Bình', coord: { lon: '105.896389', lat: '20.256667' },\r\n   },\r\n   'Hoa Lư': {\r\n      name: 'Hoa Lư', inside: 'Ninh Bình', coord: { lon: '105.916944', lat: '20.25' },\r\n   },\r\n   // Tây Bắc Bộ\r\n   'Sa Pa': {\r\n      name: 'Sa Pa', inside: 'Lào Cai', coord: { lon: '103.841944', lat: '22.335556' },\r\n   },\r\n   'Ô Quy Hồ': {\r\n      name: 'Ô Quy Hồ', inside: 'Lai Châu', coord: { lon: '103.763333', lat: '22.353889' },\r\n   },\r\n   'Phanxipang': {\r\n      name: 'Phanxipang', inside: 'Lào Cai', coord: { lon: '103.775', lat: '22.303333' },\r\n   },\r\n   'Mù Cang Chải': {\r\n      name: 'Mù Cang Chải', inside: 'Yên Bái', coord: { lon: '104.089222', lat: '21.850915' },\r\n   },\r\n   'Tà Xùa': {\r\n      name: 'Tà Xùa', inside: 'Sơn La', coord: { lon: '104.490278', lat: '21.326944' },\r\n   },\r\n   'Mai Châu': {\r\n      name: 'Mai Châu', inside: 'Hòa Bình', coord: { lon: '105.005278', lat: '20.671667' },\r\n   },\r\n   // Đông Bắc Bộ\r\n   'Mã Pí Lèng': {\r\n      name: 'Mã Pí Lèng', inside: 'Hà Giang', coord: { lon: '105.410942', lat: '23.240808' },\r\n   },\r\n   'Bản Giốc': {\r\n      name: 'Bản Giốc', inside: 'Cao Bằng', coord: { lon: '106.722501', lat: '22.855897' },\r\n   },\r\n   'Hồ Ba Bể': {\r\n      name: 'Hồ Ba Bể', inside: 'Bắc Kạn', coord: { lon: '105.616667', lat: '22.416667' },\r\n   },\r\n   'Yên Tử': {\r\n      name: 'Yên Tử', inside: 'Quảng Ninh', coord: { lon: '106.716667', lat: '21.083333' },\r\n   },\r\n   'Hạ Long': {\r\n      name: 'Hạ Long', inside: 'Quảng Ninh', coord: { lon: '107.089722', lat: '20.873333' },\r\n   },\r\n   'Cô Tô': {\r\n      name: 'Cô Tô', inside: 'Quảng Ninh', coord: { lon: '107.698056', lat: '20.947222' },\r\n   },\r\n\r\n   // TRUNG BỘ\r\n   // Bắc Trung Bộ\r\n   'Sầm Sơn': {\r\n      name: 'Sầm Sơn', inside: 'Thanh Hóa', coord: { lon: '105.887778', lat: '19.707778' },\r\n   },\r\n   'Cửa Lò': {\r\n      name: 'Cửa Lò', inside: 'Nghệ An', coord: { lon: '105.73', lat: '18.72' },\r\n   },\r\n   'Bãi Lữ': {\r\n      name: 'Bãi Lữ', inside: 'Nghệ An', coord: { lon: '105.6', lat: '18.8' },\r\n   },\r\n   'Phong Nha - Kẻ Bàng': {\r\n      name: 'Phong Nha - Kẻ Bàng', inside: 'Quảng Bình', coord: { lon: '106.15125', lat: '17.537222' },\r\n   },\r\n   'Sơn Đoòng': {\r\n      name: 'Sơn Đoòng', inside: 'Quảng Bình', coord: { lon: '106.2875', lat: '17.456944' },\r\n   },\r\n   'Lăng Cô': {\r\n      name: 'Lăng Cô', inside: 'Thừa Thiên - Huế', coord: { lon: '108.0836', lat: '16.23' },\r\n   },\r\n   // Duyên hải Nam Trung Bộ\r\n   'Bà Nà': {\r\n      name: 'Bà Nà', inside: 'Đà Nẵng', coord: { lon: '107.9942', lat: '15.9957' },\r\n   },\r\n   'Mỹ Sơn': {\r\n      name: 'Mỹ Sơn', inside: 'Quảng Nam', coord: { lon: '108.116667', lat: '15.766667' },\r\n   },\r\n   'Hội An': {\r\n      name: 'Hội An', inside: 'Quảng Nam', coord: { lon: '108.320556', lat: '15.880833' },\r\n   },\r\n   'Nha Trang': {\r\n      name: 'Nha Trang', inside: 'Khánh Hòa', coord: { lon: '109.196389', lat: '12.256111' },\r\n   },\r\n   'Lý Sơn': {\r\n      name: 'Lý Sơn', inside: 'Quảng Ngãi', coord: { lon: '109.1175', lat: '15.380833' },\r\n   },\r\n   'Bãi Xép': {\r\n      name: 'Bãi Xép', inside: 'Phú Yên', coord: { lon: '109.255278', lat: '13.291111' },\r\n   },\r\n   'Mũi Né': {\r\n      name: 'Mũi Né', inside: 'Bình Thuận', coord: { lon: '108.283333', lat: '10.933333' },\r\n   },\r\n   // Tây Nguyên\r\n   'Biển Hồ': {\r\n      name: 'Biển Hồ', inside: 'Gia Lai', coord: { lon: '108.014444', lat: '14.059444' },\r\n   },\r\n   'Đà Lạt': {\r\n      name: 'Đà Lạt', inside: 'Lâm Đồng', coord: { lon: '108.436866', lat: '11.940381' },\r\n   },\r\n   'Tà Năng': {\r\n      name: 'Tà Năng', inside: 'Lâm Đồng', coord: { lon: '108.444018', lat: '11.567233' },\r\n   },\r\n\r\n   // NAM BỘ\r\n   // Đông Nam Bộ\r\n   'Núi Bà Đen': {\r\n      name: 'Núi Bà Đen', inside: 'Tây Ninh', coord: { lon: '106.166667', lat: '11.366667' },\r\n   },\r\n   'Giang Điền': {\r\n      name: 'Giang Điền', inside: 'Đồng Nai', coord: { lon: '106.983357', lat: '10.921673' },\r\n   },\r\n   'Vũng Tàu': {\r\n      name: 'Vũng Tàu', inside: 'Bà Rịa - Vũng Tàu', coord: { lon: '107.095251', lat: '10.343569' },\r\n   },\r\n   // Đồng bằng sông Cửu Long\r\n   'Đồng Sen Tháp Mười': {\r\n      name: 'Đồng Sen Tháp Mười', inside: 'Đồng Tháp', coord: { lon: '105.848651', lat: '10.520498' },\r\n   },\r\n   'Cái Bè': {\r\n      name: 'Cái Bè', inside: 'Tiền Giang', coord: { lon: '105.933611', lat: '10.405833' },\r\n   },\r\n   'Thất Sơn': {\r\n      name: 'Thất Sơn', inside: 'An Giang', coord: { lon: '104.973056', lat: '10.540833' },\r\n   },\r\n   'Hòn Đá Bạc': {\r\n      name: 'Hòn Đá Bạc', inside: 'Cà Mau', coord: { lon: '104.800278', lat: '9.179166' },\r\n   },\r\n   'Phú Quốc': {\r\n      name: 'Phú Quốc', inside: 'Kiên Giang', coord: { lon: '104.010467', lat: '10.287154' },\r\n   },\r\n};","import React from 'react';\r\nimport {areaList} from '../api/location.js';\r\n\r\nfunction LocationList(props) {\r\n   const handleLocationSelect = (e) => {\r\n      props.onLocationChange(e.target.value);\r\n   }\r\n\r\n   return (\r\n      <div className=\"dropdown-content\">\r\n            <div className=\"dropdown-area-container\">\r\n               <h2 className=\"area-name\">{areaList[0].name}</h2>\r\n               {\r\n                  areaList[0].sub_area.map(sub_area => {\r\n                        let locationList = sub_area.location.map(location => {\r\n                           return (\r\n                              <button \r\n                                 className=\"dropdown-option\" \r\n                                 key={location.title} \r\n                                 value={location.title} \r\n                                 onClick={handleLocationSelect}\r\n                              >\r\n                                    {location.title}\r\n                              </button>\r\n                           );\r\n                        });\r\n                        locationList.unshift(\r\n                           <h3 className=\"subarea-name\" key={sub_area.name}>{sub_area.name}</h3>\r\n                        );\r\n                        \r\n                        return <div className=\"dropdown-subarea-container\" key={sub_area.name}>{locationList}</div>;\r\n                  })\r\n               }\r\n            </div>\r\n            <div className=\"dropdown-area-container\">\r\n               <h2 className=\"area-name\">{areaList[1].name}</h2>\r\n               {\r\n                  areaList[1].sub_area.map(sub_area => {\r\n                        let locationList = sub_area.location.map(location => {\r\n                           return (\r\n                              <button\r\n                                 className=\"dropdown-option\" \r\n                                 key={location.title} \r\n                                 value={location.title} \r\n                                 onClick={handleLocationSelect}\r\n                              >\r\n                                    {location.title}\r\n                              </button>\r\n                           );\r\n                        });\r\n                        locationList.unshift(\r\n                           <h3 className=\"subarea-name\" key={sub_area.name}>{sub_area.name}</h3>\r\n                        );\r\n                        \r\n                        return <div className=\"dropdown-subarea-container\" key={sub_area.name}>{locationList}</div>;\r\n                  })\r\n               }\r\n            </div>\r\n            <div className=\"dropdown-area-container\">\r\n               <h2 className=\"area-name\">{areaList[2].name}</h2>\r\n               {\r\n                  areaList[2].sub_area.map(sub_area => {\r\n                        let locationList = sub_area.location.map(location => {\r\n                           return (\r\n                              <button\r\n                                 className=\"dropdown-option\" \r\n                                 key={location.title} \r\n                                 value={location.title} \r\n                                 onClick={handleLocationSelect}\r\n                              >\r\n                                    {location.title}\r\n                              </button>\r\n                           );\r\n                        });\r\n                        locationList.unshift(\r\n                           <h3 className=\"subarea-name\" key={sub_area.name}>{sub_area.name}</h3>\r\n                        );\r\n                        \r\n                        return <div className=\"dropdown-subarea-container\" key={sub_area.name}>{locationList}</div>;\r\n                  })\r\n               }\r\n            </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default LocationList;","import React from 'react';\r\nimport {travelLocationList} from '../api/location.js';\r\n\r\nfunction TravelLocationList(props) {\r\n   const handleLocationSelect = (e) => {\r\n      props.onLocationChange(e.target.value);\r\n   }\r\n\r\n   return (\r\n      <div className=\"dropdown-content dropdown-content-travel\">\r\n            <div className=\"dropdown-area-container\">\r\n               <h2 className=\"area-name\">{travelLocationList[0].name}</h2>\r\n               {\r\n                  travelLocationList[0].sub_area.map(sub_area => {\r\n                        let locationList = sub_area.location.map(location => {\r\n                           return (\r\n                              <button \r\n                                 className=\"dropdown-option\" \r\n                                 key={location.title} \r\n                                 value={location.title} \r\n                                 onClick={handleLocationSelect}\r\n                              >\r\n                                    {location.title}\r\n                              </button>\r\n                           );\r\n                        });\r\n                        locationList.unshift(\r\n                           <h3 className=\"subarea-name\" key={sub_area.name}>{sub_area.name}</h3>\r\n                        );\r\n                        \r\n                        return <div className=\"dropdown-subarea-container\" key={sub_area.name}>{locationList}</div>;\r\n                  })\r\n               }\r\n            </div>\r\n            <div className=\"dropdown-area-container\">\r\n               <h2 className=\"area-name\">{travelLocationList[1].name}</h2>\r\n               {\r\n                  travelLocationList[1].sub_area.map(sub_area => {\r\n                        let locationList = sub_area.location.map(location => {\r\n                           return (\r\n                              <button \r\n                                 className=\"dropdown-option\" \r\n                                 key={location.title} \r\n                                 value={location.title} \r\n                                 onClick={handleLocationSelect}\r\n                              >\r\n                                    {location.title}\r\n                              </button>\r\n                           );\r\n                        });\r\n                        locationList.unshift(\r\n                           <h3 className=\"subarea-name\" key={sub_area.name}>{sub_area.name}</h3>\r\n                        );\r\n                        \r\n                        return <div className=\"dropdown-subarea-container\" key={sub_area.name}>{locationList}</div>;\r\n                  })\r\n               }\r\n            </div>\r\n            <div className=\"dropdown-area-container\">\r\n               <h2 className=\"area-name\">{travelLocationList[2].name}</h2>\r\n               {\r\n                  travelLocationList[2].sub_area.map(sub_area => {\r\n                        let locationList = sub_area.location.map(location => {\r\n                           return (\r\n                              <button \r\n                                 className=\"dropdown-option\" \r\n                                 key={location.title} \r\n                                 value={location.title} \r\n                                 onClick={handleLocationSelect}\r\n                              >\r\n                                    {location.title}\r\n                              </button>\r\n                           );\r\n                        });\r\n                        locationList.unshift(\r\n                           <h3 className=\"subarea-name\" key={sub_area.name}>{sub_area.name}</h3>\r\n                        );\r\n                        \r\n                        return <div className=\"dropdown-subarea-container\" key={sub_area.name}>{locationList}</div>;\r\n                  })\r\n               }\r\n            </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default TravelLocationList;","import React from 'react';\r\nimport LocationList from './LocationList.js';\r\nimport TravelLocationList from './TravelLocationList.js';\r\n\r\nfunction Navbar(props) {\r\n   return (\r\n      <div className=\"navbar\">\r\n            <div className=\"option-container\">\r\n               <a className=\"dropdown\" href=\"#!\">\r\n                  Tỉnh / Thành phố\r\n                  <LocationList onLocationChange={props.onOptionChange}/>\r\n               </a>\r\n               <a className=\"dropdown\" href=\"#!\">\r\n                  Địa điểm du lịch\r\n                  <TravelLocationList onLocationChange={props.onOptionChange}/>\r\n               </a>\r\n            </div>\r\n            <div className=\"appname\">\r\n               <p class=\"letter letter-c\">C</p>\r\n               <p class=\"letter letter-l\">l</p>\r\n               <p class=\"letter letter-o\">o</p>\r\n               <p class=\"letter letter-u\">u</p>\r\n               <p class=\"letter letter-d\">d</p>\r\n               <p class=\"letter letter-y\">y</p>\r\n            </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Navbar;","export const apiKey = '373a59a53a6e12d6492b8823e6963f5f';\r\n\r\nexport const dailyWeather =  new URL(\"https://api.openweathermap.org/data/2.5/onecall?\");\r\nexport const currentWeather = new URL(\"https://api.openweathermap.org/data/2.5/onecall?\");\r\n\r\n// Weather icon link\r\nexport const weatherIcon = new URL(\"https://openweathermap.org/img/wn/\");\r\nexport const weatherIconFormat = \"@2x.png\";\r\n\r\nexport async function getCurrentWeather(lat, lon) {\r\n    const params = {\r\n        appid: apiKey,\r\n        lat: lat,\r\n        lon: lon,\r\n        exclude: 'minutely,hourly,daily',\r\n        units: 'metric',\r\n    };\r\n    let url = new URL(currentWeather.toString());\r\n    url.search = new URLSearchParams(params).toString();\r\n\r\n    const response = await fetch(url);\r\n    const json = await response.json();\r\n\r\n    return json;\r\n}\r\n\r\nexport async function getHourlyWeather(lat,lon) {\r\n    const params = {\r\n        appid: apiKey,\r\n        lat: lat,\r\n        lon: lon,\r\n        exclude: 'current,minutely,daily',\r\n        units: 'metric',\r\n    }\r\n    let url = new URL(dailyWeather.toString());\r\n    url.search = new URLSearchParams(params).toString();\r\n\r\n    const response = await fetch(url);\r\n    const json = await response.json();\r\n\r\n    return json;\r\n}\r\n\r\nexport async function getDailyWeather(lat, lon) {\r\n    const params = {\r\n        appid: apiKey,\r\n        lat: lat,\r\n        lon: lon,\r\n        exclude: 'current,minutely,hourly',\r\n        units: 'metric',\r\n    };\r\n    let url = new URL(dailyWeather.toString());\r\n    url.search = new URLSearchParams(params).toString();\r\n\r\n    const response = await fetch(url);\r\n    const json = await response.json();\r\n\r\n    return json;\r\n}\r\n","export function timestampToTime(timestamp) {\r\n    let defaultDate = new Date(timestamp * 1000);\r\n\r\n    let hours = defaultDate.getHours();\r\n    let minutes = '0' + defaultDate.getMinutes();\r\n\r\n    let time = hours + ':' + minutes.substr(-2);\r\n\r\n    return time;\r\n}\r\n\r\nexport function timestampToDate(timestamp) {\r\n    let defaultDate = new Date(timestamp * 1000);\r\n\r\n    let day = defaultDate.getDate();\r\n    let month = defaultDate.getMonth() + 1;\r\n\r\n    let date = day + '-' + month;\r\n    \r\n    return date;\r\n}\r\n\r\nexport function toVietnamese(description) {\r\n   let translation = '';\r\n\r\n   switch (description) {\r\n      // Clouds weather\r\n      case 'few clouds':\r\n         translation = 'Ít mây';\r\n         break;\r\n      case 'scattered clouds':\r\n         translation = 'Mây rải rác';\r\n         break;\r\n      case 'broken clouds':\r\n         translation = 'Nhiều mây';\r\n         break;\r\n      case 'overcast clouds':\r\n         translation = 'Nhiều mây';\r\n         break;\r\n      \r\n      // Rain weather\r\n      case 'light rain':\r\n         translation = 'Mưa nhẹ';\r\n         break;\r\n      case 'moderate rain':\r\n         translation = 'Mưa vừa';\r\n         break;\r\n      case 'heavy intensity rain':\r\n         translation = 'Mưa to';\r\n         break;\r\n      case 'very heavy rain':\r\n         translation = 'Mưa rất to';\r\n         break;\r\n      case 'extreme rain':\r\n         translation = 'Mưa rất to';\r\n         break;\r\n      case 'freezing rain':\r\n         translation = 'Mưa lạnh';\r\n         break;\r\n      case 'light intensity shower rain':\r\n         translation = 'Mưa rào nhẹ';\r\n         break;\r\n      case 'shower rain':\r\n         translation = 'Mưa rào';\r\n         break;\r\n      case 'heavy intensity shower rain':\r\n         translation = 'Mưa to';\r\n         break;\r\n      case 'ragged shower rain':\r\n         translation = 'Mưa rất to';\r\n         break;\r\n\r\n      // Clear weather\r\n      case 'clear sky':\r\n         translation = 'Quang mây';\r\n         break;\r\n\r\n      default: \r\n         translation = description;\r\n   }\r\n\r\n   return translation;\r\n}","import React from 'react';\r\n\r\nimport {getCurrentWeather} from '../api/provider.js';\r\nimport {weatherIcon, weatherIconFormat} from '../api/provider.js';\r\nimport {province} from '../api/location.js';\r\nimport {timestampToTime, toVietnamese} from '../utils.js';\r\n\r\nclass CurrentWeather extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         location: this.props.location,\r\n         temp: '',\r\n         weather: '',\r\n         weather_icon: '',\r\n         feels_like: '',\r\n         clouds: '',\r\n         humidity: '',\r\n         uv: '',\r\n         visibility: '',\r\n         wind_speed: '',\r\n         sunrise: '',\r\n         sunset: '',\r\n      };\r\n   }\r\n\r\n   componentDidMount() {\r\n      const location = province[`${this.state.location}`];\r\n\r\n      getCurrentWeather(location.coord.lat, location.coord.lon).then(val => {\r\n         this.setState({\r\n               location: this.props.location,\r\n               temp: val.current.temp,\r\n               weather: val.current.weather[0].description,\r\n               weather_icon: val.current.weather[0].icon,\r\n               feels_like: val.current.feels_like,\r\n               clouds: val.current.clouds,\r\n               humidity: val.current.humidity,\r\n               uv: val.current.uvi,\r\n               visibility: val.current.visibility,\r\n               wind_speed: val.current.wind_speed,\r\n               sunrise: val.current.sunrise,\r\n               sunset: val.current.sunset,\r\n         });\r\n      });\r\n   }\r\n\r\n   componentWillUnmount() {\r\n      clearInterval(this.interval);\r\n   }\r\n\r\n   componentDidUpdate(prevProps) {\r\n      if (this.props.location !== prevProps.location) {\r\n         const location = province[`${this.props.location}`];\r\n         console.log('update location: ' + location.name);\r\n\r\n         getCurrentWeather(location.coord.lat, location.coord.lon).then(val => {\r\n            this.setState({\r\n                  location: this.props.location,\r\n                  temp: val.current.temp,\r\n                  weather: val.current.weather[0].description,\r\n                  weather_icon: val.current.weather[0].icon,\r\n                  feels_like: val.current.feels_like,\r\n                  clouds: val.current.clouds,\r\n                  humidity: val.current.humidity,\r\n                  uv: val.current.uvi,\r\n                  visibility: val.current.visibility,\r\n                  wind_speed: val.current.wind_speed,\r\n                  sunrise: val.current.sunrise,\r\n                  sunset: val.current.sunset,\r\n            });\r\n         });\r\n      }\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"current-container\">\r\n               <div className=\"current-main\">\r\n                  <p className=\"current-location\">{this.state.location}</p>\r\n                  <p className=\"current-temp\">{Math.round(this.state.temp)} °C</p>\r\n                  <img \r\n                     className=\"current-weather-icon\"\r\n                     src={weatherIcon + this.state.weather_icon + weatherIconFormat} \r\n                     alt=\"weather icon\"\r\n                  />\r\n                  <p className=\"current-weather\">{toVietnamese(this.state.weather)}</p>\r\n               </div>\r\n               <div className=\"current-details\">\r\n                  <table className=\"table-details\">\r\n                     <tbody>\r\n                           <tr>\r\n                              <td>Nhiệt độ cảm nhận</td>\r\n                              <td className=\"detail-val\">{Math.round(this.state.feels_like)} °C</td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>Độ ẩm</td>\r\n                              <td className=\"detail-val\">{this.state.humidity} %</td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>Tầm nhìn xa</td>\r\n                              <td className=\"detail-val\">{this.state.visibility / 1000} km</td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>Mặt trời mọc</td>\r\n                              <td className=\"detail-val\">{timestampToTime(this.state.sunrise)}</td>\r\n                           </tr>\r\n                     </tbody>\r\n                  </table>\r\n                  <table className=\"table-details\">\r\n                     <tbody>\r\n                           <tr>\r\n                              <td>Tỉ lệ mây</td>\r\n                              <td className=\"detail-val\">{this.state.clouds} %</td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>Chỉ số UV</td>\r\n                              <td className=\"detail-val\">{this.state.uv}</td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>Gió</td>\r\n                              <td className=\"detail-val\">{Math.round(this.state.wind_speed * 3.6)} km/h</td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>Mặt trời lặn</td>\r\n                              <td className=\"detail-val\">{timestampToTime(this.state.sunset)}</td>\r\n                           </tr>\r\n                     </tbody>\r\n                  </table>\r\n               </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default CurrentWeather;","export default __webpack_public_path__ + \"static/media/uv_icon.65f61773.png\";","import React from 'react';\r\n\r\nimport {getHourlyWeather} from '../api/provider.js';\r\nimport {weatherIcon, weatherIconFormat} from '../api/provider.js';\r\nimport {province} from '../api/location.js';\r\nimport {timestampToTime} from '../utils.js';\r\n\r\nimport uv_icon from '../uv_icon.png';\r\n\r\nclass HourlyForecast extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         location: this.props.location,\r\n         weatherData: [],\r\n      };\r\n   }\r\n\r\n   componentDidMount() {\r\n      const location = province[`${this.state.location}`];\r\n\r\n      getHourlyWeather(location.coord.lat, location.coord.lon).then(val => {\r\n         this.setState({\r\n               location: this.props.location,\r\n               weatherData: val.hourly,\r\n         });\r\n      });\r\n   }\r\n\r\n   componentDidUpdate(prevProps) {\r\n      if (this.props.location !== prevProps.location) {\r\n         const location = province[`${this.props.location}`];\r\n\r\n         getHourlyWeather(location.coord.lat, location.coord.lon).then(val => {\r\n            console.log(val);\r\n            this.setState({\r\n               location: this.props.location,\r\n               weatherData: val.hourly,\r\n            });\r\n         });\r\n      }\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"forecast-container\">\r\n               <h2 className=\"section-title\">Dự báo thời tiết hôm nay</h2>\r\n               <div className=\"forecast-card-container\">\r\n                  {\r\n                     this.state.weatherData.slice(0, 5).map(element => {\r\n                           return (\r\n                              <div key={element.dt} className=\"forecast-card\">\r\n                                 <p className=\"time\">{timestampToTime(element.dt)}</p>\r\n                                 <p className=\"max-temp\">{Math.round(element.temp)} <span>°</span></p>\r\n                                 <img \r\n                                       className=\"forecast-weather-icon\"\r\n                                       src={weatherIcon + element.weather[0].icon + weatherIconFormat}\r\n                                       alt=\"weather icon\"\r\n                                 />\r\n                                 <div className=\"forecast-uv-container\">\r\n                                    <img className=\"forecast-uv-icon\" src={uv_icon} alt=\"uv icon\"/>\r\n                                    <p className=\"forecast-uv-index\">{element.uvi}</p>\r\n                                 </div>\r\n                              </div>\r\n                           );\r\n                     })\r\n                  }\r\n               </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default HourlyForecast;","import React from 'react';\r\n\r\nimport {getDailyWeather} from '../api/provider.js';\r\nimport {weatherIcon, weatherIconFormat} from '../api/provider.js';\r\nimport {province} from '../api/location.js';\r\nimport {timestampToDate} from '../utils.js';\r\n\r\nclass DailyForecast extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         location: this.props.location,\r\n         weatherData: [],\r\n      };\r\n   }\r\n\r\n   componentDidMount() {\r\n      const location = province[`${this.state.location}`];\r\n\r\n      getDailyWeather(location.coord.lat, location.coord.lon).then(val => {\r\n         // remove today weather from the daily forecast list\r\n         val.daily.shift();\r\n\r\n         this.setState({\r\n               location: this.props.location,\r\n               weatherData: val.daily,\r\n         });\r\n      });\r\n   }\r\n\r\n   componentDidUpdate(prevProps) {\r\n      if (this.props.location !== prevProps.location) {\r\n         const location = province[`${this.props.location}`];\r\n\r\n         getDailyWeather(location.coord.lat, location.coord.lon).then(val => {\r\n               // remove today weather from the daily forecast list\r\n               val.daily.shift();\r\n\r\n               this.setState({\r\n                  location: this.props.location,\r\n                  weatherData: val.daily,\r\n               });\r\n         });\r\n      }\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"forecast-container\">\r\n               <h2 className=\"section-title\">Dự báo thời tiết 5 ngày tới</h2>\r\n               <div className=\"forecast-card-container\">\r\n                  {\r\n                     this.state.weatherData.slice(0, 5).map(element => {\r\n                           return (\r\n                              <div key={element.dt} className=\"forecast-card\">\r\n                                 <p className=\"date\">{timestampToDate(element.dt)}</p>\r\n                                 <p className=\"max-temp\">{Math.round(element.temp.max)} <span>°</span></p>\r\n                                 <p className=\"min-temp\">{Math.round(element.temp.min)} <span>°</span></p>\r\n                                 <img \r\n                                       className=\"forecast-weather-icon\"\r\n                                       src={weatherIcon + element.weather[0].icon + weatherIconFormat}\r\n                                       alt=\"weather icon\"\r\n                                 />\r\n                              </div>\r\n                           );\r\n                     })\r\n                  }\r\n               </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default DailyForecast;","import React from 'react';\nimport './App.css';\n\nimport Navbar from './components/Navbar.js';\nimport CurrentWeather from './components/CurrentWeather.js';\nimport HourlyForecast from './components/HourlyForecast.js';\nimport DailyForecast from './components/DailyForecast.js';\n\nclass App extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         location: 'Hà Nội',\n      };\n   }\n\n   handleLocationChange = location => {\n      this.setState({ location });\n   };\n\n   render() {\n      return (\n         <div className=\"App\">\n               <Navbar onOptionChange={this.handleLocationChange}/>\n               <CurrentWeather location={this.state.location}/>\n               <HourlyForecast location={this.state.location}/>\n               <DailyForecast location={this.state.location}/>\n         </div>\n      );\n   }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}